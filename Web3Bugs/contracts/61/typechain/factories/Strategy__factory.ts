/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Strategy } from "../Strategy";

export class Strategy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _controller: string,
    _want: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Strategy> {
    return super.deploy(
      _controller,
      _want,
      overrides || {}
    ) as Promise<Strategy>;
  }
  getDeployTransaction(
    _controller: string,
    _want: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_controller, _want, overrides || {});
  }
  attach(address: string): Strategy {
    return super.attach(address) as Strategy;
  }
  connect(signer: Signer): Strategy__factory {
    return super.connect(signer) as Strategy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Strategy {
    return new Contract(address, _abi, signerOrProvider) as Strategy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_want",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_asset",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b56380380610b568339818101604052604081101561003357600080fd5b508051602090910151600180546001600160a01b03199081163317909155600280546001600160a01b0394851690831617905560008054939092169216919091179055610ad1806100856000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063722713f711610071578063722713f714610139578063853828b61461014157806392eefe9b14610149578063ab033ea91461016f578063d0e30db014610195578063f77c47911461019d576100a9565b80631f1fcd51146100ae5780631fe4a686146100d25780632e1a7d4d146100da57806351cff8d9146100f95780635aa6e67514610131575b600080fd5b6100b66101a5565b604080516001600160a01b039092168252519081900360200190f35b6100b66101b4565b6100f7600480360360208110156100f057600080fd5b50356101c3565b005b61011f6004803603602081101561010f57600080fd5b50356001600160a01b03166102f1565b60408051918252519081900360200190f35b6100b66103d5565b61011f6103e4565b61011f610461565b6100f76004803603602081101561015f57600080fd5b50356001600160a01b03166105c7565b6100f76004803603602081101561018557600080fd5b50356001600160a01b0316610636565b6100f76106a5565b6100b6610720565b6000546001600160a01b031681565b6003546001600160a01b031681565b6002546001600160a01b03163314610210576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6002546000805460408051632988bb9f60e21b81526001600160a01b03928316600482015290519293919091169163a622ee7c91602480820192602092909190829003018186803b15801561026457600080fd5b505afa158015610278573d6000803e3d6000fd5b505050506040513d602081101561028e57600080fd5b505190506001600160a01b0381166102d6576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b6000546102ed906001600160a01b0316828461072f565b5050565b6002546000906001600160a01b03163314610341576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561038757600080fd5b505afa15801561039b573d6000803e3d6000fd5b505050506040513d60208110156103b157600080fd5b50516002549091506103d0906001600160a01b0384811691168361072f565b919050565b6001546001600160a01b031681565b60008054604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561043057600080fd5b505afa158015610444573d6000803e3d6000fd5b505050506040513d602081101561045a57600080fd5b5051905090565b6002546000906001600160a01b031633146104b1576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b600054604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156104fc57600080fd5b505afa158015610510573d6000803e3d6000fd5b505050506040513d602081101561052657600080fd5b50516002546000805460408051632988bb9f60e21b81526001600160a01b0392831660048201529051949550919392169163a622ee7c91602480820192602092909190829003018186803b15801561057d57600080fd5b505afa158015610591573d6000803e3d6000fd5b505050506040513d60208110156105a757600080fd5b50516000549091506105c3906001600160a01b0316828461072f565b5090565b6001546001600160a01b03163314610614576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610683576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008054604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156106f157600080fd5b505afa158015610705573d6000803e3d6000fd5b505050506040513d602081101561071b57600080fd5b505050565b6002546001600160a01b031681565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261071b90849060006107d1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661082d9092919063ffffffff16565b80519091501561071b578080602001905160208110156107f057600080fd5b505161071b5760405162461bcd60e51b815260040180806020018281038252602a815260200180610a72602a913960400191505060405180910390fd5b606061083c8484600085610846565b90505b9392505050565b6060824710156108875760405162461bcd60e51b8152600401808060200182810382526026815260200180610a4c6026913960400191505060405180910390fd5b610890856109a1565b6108e1576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b6020831061091f5780518252601f199092019160209182019101610900565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610981576040519150601f19603f3d011682016040523d82523d6000602084013e610986565b606091505b50915091506109968282866109a7565b979650505050505050565b3b151590565b606083156109b657508161083f565b8251156109c65782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a105781810151838201526020016109f8565b50505050905090810190601f168015610a3d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220e0b0ff3b1d86ddcc5dd299e17ed2fc37787a4ba7c6d53ad5206481d2dc92bda464736f6c63430007060033";
