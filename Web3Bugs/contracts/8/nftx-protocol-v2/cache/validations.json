{
  "version": "3.4",
  "log": [
    {
      "contracts/solidity/util/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable": {
        "src": "contracts/solidity/util/EnumerableMapUpgradeable.sol:29",
        "version": {
          "withMetadata": "2065b38e8f94835cd697dc4bb3f7a003608ea4e796ba69f295d7ef213c5c5f42",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      }
    },
    {
      "contracts/solidity/util/Create2.sol:Create2": {
        "src": "contracts/solidity/util/Create2.sol:14",
        "version": {
          "withMetadata": "50267ad3d968be418500f72286d5c69e4fc47ac0f1215164f7016045357941b7",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      }
    },
    {
      "contracts/solidity/testing/Address.sol:Address": {
        "src": "contracts/solidity/testing/Address.sol:8",
        "version": {
          "withMetadata": "08a5d9dab875b06dc6dd1bec85ab4bcd72beb24947254c2b24ac06b1c3ff5f7c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/Context.sol:Context": {
        "src": "contracts/solidity/testing/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/ERC1155.sol:ERC1155": {
        "src": "contracts/solidity/testing/ERC1155.sol:21",
        "version": {
          "withMetadata": "82911e32bda4bce0c06822e6d79b5ba21f5eae9499b4d0bd35d3238ef0aae0d7",
          "withoutMetadata": "272ff13a8462c6738cbce96d6f044770008b359e16e6b1a3a67665d161589953",
          "linkedWithoutMetadata": "272ff13a8462c6738cbce96d6f044770008b359e16e6b1a3a67665d161589953"
        },
        "inherit": [
          "contracts/solidity/testing/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "contracts/solidity/testing/IERC1155.sol:IERC1155",
          "contracts/solidity/testing/ERC165.sol:ERC165",
          "contracts/solidity/testing/IERC165.sol:IERC165",
          "contracts/solidity/testing/Context.sol:Context"
        ],
        "libraries": [
          "contracts/solidity/testing/SafeMath.sol:SafeMath",
          "contracts/solidity/testing/Address.sol:Address"
        ],
        "methods": [
          "(string)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "publicMint(address,uint256,uint256)",
          "publicMintBatch(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts/solidity/testing/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts/solidity/testing/ERC165.sol:22"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "contracts/solidity/testing/ERC1155.sol:26"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "contracts/solidity/testing/ERC1155.sol:29"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "contracts/solidity/testing/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "contracts/solidity/testing/ERC1155Receiver.sol:11",
        "inherit": [
          "contracts/solidity/testing/IERC1155Receiver.sol:IERC1155Receiver",
          "contracts/solidity/testing/ERC165.sol:ERC165",
          "contracts/solidity/testing/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155Receiver",
            "src": "contracts/solidity/testing/ERC1155Receiver.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts/solidity/testing/ERC165.sol:22"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/ERC165.sol:ERC165": {
        "src": "contracts/solidity/testing/ERC165.sol:13",
        "inherit": [
          "contracts/solidity/testing/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "contracts/solidity/testing/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts/solidity/testing/ERC165.sol:22"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/ERC721.sol:ERC721": {
        "src": "contracts/solidity/testing/ERC721.sol:21",
        "version": {
          "withMetadata": "ecdd97b1bd706d09dd59519b0359bee369bf73feb71dfaf4fc8ea15f7d3d1ba0",
          "withoutMetadata": "7e0be07ba447e30f88e35d13d1f98876409922857db757853606784661628c43",
          "linkedWithoutMetadata": "7e0be07ba447e30f88e35d13d1f98876409922857db757853606784661628c43"
        },
        "inherit": [
          "contracts/solidity/testing/IERC721Enumerable.sol:IERC721Enumerable",
          "contracts/solidity/testing/IERC721Metadata.sol:IERC721Metadata",
          "contracts/solidity/testing/IERC721.sol:IERC721",
          "contracts/solidity/testing/ERC165.sol:ERC165",
          "contracts/solidity/testing/IERC165.sol:IERC165",
          "contracts/solidity/testing/Context.sol:Context"
        ],
        "libraries": [
          "contracts/solidity/testing/SafeMath.sol:SafeMath",
          "contracts/solidity/testing/Address.sol:Address",
          "contracts/solidity/testing/EnumerableSet.sol:EnumerableSet",
          "contracts/solidity/testing/EnumerableMap.sol:EnumerableMap",
          "contracts/solidity/testing/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "baseURI()",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "publicMint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts/solidity/testing/ERC721.sol:99"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165",
              "src": "contracts/solidity/testing/ERC165.sol:22"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(UintSet)3051_storage)",
              "contract": "ERC721",
              "src": "contracts/solidity/testing/ERC721.sol:39"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(UintToAddressMap)2576_storage",
              "contract": "ERC721",
              "src": "contracts/solidity/testing/ERC721.sol:42"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts/solidity/testing/ERC721.sol:45"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts/solidity/testing/ERC721.sol:48"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts/solidity/testing/ERC721.sol:51"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts/solidity/testing/ERC721.sol:54"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721",
              "src": "contracts/solidity/testing/ERC721.sol:57"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "9",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts/solidity/testing/ERC721.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)2304_storage)dyn_storage": {
              "label": "struct EnumerableMap.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)3051_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)2312_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)2304_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)2304_storage": {
              "label": "struct EnumerableMap.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2762_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)3051_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2762_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)2576_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2312_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/EnumerableMap.sol:EnumerableMap": {
        "src": "contracts/solidity/testing/EnumerableMap.sol:29",
        "version": {
          "withMetadata": "43a5758e6a3acb536a2832c8fa5c2a4bbac1f8713736c1d102c1ffa6c33ddbaf",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/EnumerableSet.sol:EnumerableSet": {
        "src": "contracts/solidity/testing/EnumerableSet.sol:29",
        "version": {
          "withMetadata": "36a44692c0795fa13b239e6d187c5b6ef9ec120699c8105ee243289530d93fde",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/IERC1155.sol:IERC1155": {
        "src": "contracts/solidity/testing/IERC1155.sol:13",
        "inherit": [
          "contracts/solidity/testing/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "contracts/solidity/testing/IERC1155MetadataURI.sol:13",
        "inherit": [
          "contracts/solidity/testing/IERC1155.sol:IERC1155",
          "contracts/solidity/testing/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "contracts/solidity/testing/IERC1155Receiver.sol:10",
        "inherit": [
          "contracts/solidity/testing/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/IERC165.sol:IERC165": {
        "src": "contracts/solidity/testing/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/IERC721.sol:IERC721": {
        "src": "contracts/solidity/testing/IERC721.sol:10",
        "inherit": [
          "contracts/solidity/testing/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "contracts/solidity/testing/IERC721Enumerable.sol:11",
        "inherit": [
          "contracts/solidity/testing/IERC721.sol:IERC721",
          "contracts/solidity/testing/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/IERC721Metadata.sol:IERC721Metadata": {
        "src": "contracts/solidity/testing/IERC721Metadata.sol:11",
        "inherit": [
          "contracts/solidity/testing/IERC721.sol:IERC721",
          "contracts/solidity/testing/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/IERC721Receiver.sol:IERC721Receiver": {
        "src": "contracts/solidity/testing/IERC721Receiver.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/SafeMath.sol:SafeMath": {
        "src": "contracts/solidity/testing/SafeMath.sol:18",
        "version": {
          "withMetadata": "5035fe55b924d685058d773a5d33df4ccd72e9737ad703d83a39ed27cc71e4df",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      },
      "contracts/solidity/testing/Strings.sol:Strings": {
        "src": "contracts/solidity/testing/Strings.sol:8",
        "version": {
          "withMetadata": "ef7a3835bea81f2011c9497e781c4d4c643a40c9d8f9e80b51e543d9763f6f24",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      }
    },
    {
      "contracts/solidity/proxy/ITransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "contracts/solidity/proxy/ITransparentUpgradeableProxy.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.8"
      }
    }
  ]
}