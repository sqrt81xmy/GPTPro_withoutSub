/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EmergencyPausable,
  EmergencyPausableInterface,
} from "../EmergencyPausable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261004c60201b60201c565b61005460201b60201c565b60008060146101000a81548160ff021916908315150217905550610118565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610bc7806101276000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633f4ba83a146100675780635c975abb14610071578063715018a61461008f5780638456cb59146100995780638da5cb5b146100a3578063f2fde38b146100c1575b600080fd5b61006f6100dd565b005b610079610297565b6040516100869190610a70565b60405180910390f35b6100976102ad565b005b6100a1610335565b005b6100ab6104ef565b6040516100b89190610a55565b60405180910390f35b6100db60048036038101906100d69190610859565b610518565b005b6100e5610610565b73ffffffffffffffffffffffffffffffffffffffff166349fc85576040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561012c57600080fd5b505af1158015610140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101649190610882565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061024e57506101a0610610565b73ffffffffffffffffffffffffffffffffffffffff1663d33219b46040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156101e757600080fd5b505af11580156101fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021f9190610882565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028490610a8b565b60405180910390fd5b61029561061f565b565b60008060149054906101000a900460ff16905090565b6102b56106c0565b73ffffffffffffffffffffffffffffffffffffffff166102d36104ef565b73ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090610b0b565b60405180910390fd5b61033360006106c8565b565b61033d610610565b73ffffffffffffffffffffffffffffffffffffffff166349fc85576040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561038457600080fd5b505af1158015610398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc9190610882565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104a657506103f8610610565b73ffffffffffffffffffffffffffffffffffffffff1663d33219b46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561043f57600080fd5b505af1158015610453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104779190610882565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90610a8b565b60405180910390fd5b6104ed61078c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105206106c0565b73ffffffffffffffffffffffffffffffffffffffff1661053e6104ef565b73ffffffffffffffffffffffffffffffffffffffff1614610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90610b0b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fb90610acb565b60405180910390fd5b61060d816106c8565b50565b600061061a6104ef565b905090565b610627610297565b610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d90610aab565b60405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6106a96106c0565b6040516106b69190610a55565b60405180910390a1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610794610297565b156107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90610aeb565b60405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108186106c0565b6040516108259190610a55565b60405180910390a1565b60008135905061083e81610b7a565b92915050565b60008151905061085381610b7a565b92915050565b60006020828403121561086b57600080fd5b60006108798482850161082f565b91505092915050565b60006020828403121561089457600080fd5b60006108a284828501610844565b91505092915050565b6108b481610b3c565b82525050565b6108c381610b4e565b82525050565b60006108d6603b83610b2b565b91507f4f6e6c7920656d657267656e637920676f7665726e6f72206f7220676f76657260008301527f6e6f72206d61792063616c6c20746869732066756e6374696f6e2e00000000006020830152604082019050919050565b600061093c601483610b2b565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b600061097c602683610b2b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006109e2601083610b2b565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000610a22602083610b2b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000602082019050610a6a60008301846108ab565b92915050565b6000602082019050610a8560008301846108ba565b92915050565b60006020820190508181036000830152610aa4816108c9565b9050919050565b60006020820190508181036000830152610ac48161092f565b9050919050565b60006020820190508181036000830152610ae48161096f565b9050919050565b60006020820190508181036000830152610b04816109d5565b9050919050565b60006020820190508181036000830152610b2481610a15565b9050919050565b600082825260208201905092915050565b6000610b4782610b5a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610b8381610b3c565b8114610b8e57600080fd5b5056fea26469706673582212204d3964bd58e6571b5b363993a22d3948624168cc71e25619d7bc6b380e7a75f564736f6c63430008000033";

export class EmergencyPausable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EmergencyPausable> {
    return super.deploy(overrides || {}) as Promise<EmergencyPausable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EmergencyPausable {
    return super.attach(address) as EmergencyPausable;
  }
  connect(signer: Signer): EmergencyPausable__factory {
    return super.connect(signer) as EmergencyPausable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmergencyPausableInterface {
    return new utils.Interface(_abi) as EmergencyPausableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EmergencyPausable {
    return new Contract(address, _abi, signerOrProvider) as EmergencyPausable;
  }
}
