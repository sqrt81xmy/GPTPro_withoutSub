/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockRewardPool,
  MockRewardPoolInterface,
} from "../MockRewardPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_extraRewards",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "extraRewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraRewardsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "claimExtras",
        type: "bool",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "claim",
        type: "bool",
      },
    ],
    name: "withdrawAllAndUnwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claim",
        type: "bool",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000a9838038062000a988339810160408190526200003491620001c1565b600080546001600160a01b038086166001600160a01b031992831617909255600180549285169290911691909117905580516200007990600290602084019062000083565b50505050620002e0565b828054828255906000526020600020908101928215620000db579160200282015b82811115620000db57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620000a4565b50620000e9929150620000ed565b5090565b5b80821115620000e95760008155600101620000ee565b60006200011b620001158462000259565b6200022d565b905080838252602082019050828560208602820111156200013b57600080fd5b60005b858110156200016b578162000154888262000175565b84525060209283019291909101906001016200013e565b5050509392505050565b80516200018281620002bb565b92915050565b600082601f8301126200019a57600080fd5b8151620001ac84826020860162000104565b949350505050565b80516200018281620002d5565b600080600060608486031215620001d757600080fd5b6000620001e58686620001b4565b9350506020620001f88682870162000175565b92505060408401516001600160401b038111156200021557600080fd5b620002238682870162000188565b9150509250925092565b6040518181016001600160401b0381118282101715620002515762000251620002a5565b604052919050565b60006001600160401b03821115620002755762000275620002a5565b5060209081020190565b6000620001828262000299565b600062000182826200027f565b6001600160a01b031690565b634e487b7160e01b600052604160045260246000fd5b620002c6816200027f565b8114620002d257600080fd5b50565b620002c6816200028c565b6107a880620002f06000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c32e72021161005b578063c32e72021461010b578063d55a23f41461011e578063d6f1926214610126578063f7c618c11461012e57610088565b806340c354461461008d57806349f039a2146100b65780637050ccd9146100cb57806370a08231146100eb575b600080fd5b6100a061009b36600461060b565b610136565b6040516100ad9190610687565b60405180910390f35b6100c96100c43660046105cf565b610160565b005b6100de6100d9366004610595565b610177565b6040516100ad91906106d2565b6100fe6100f936600461056f565b61036c565b6040516100ad91906106e0565b6100de610119366004610647565b6103ed565b6100fe61049d565b6100fe6104a3565b6100a0610529565b6002818154811061014657600080fd5b6000918252602090912001546001600160a01b0316905081565b61017361016d600061036c565b826103ed565b5050565b6001546040516370a0823160e01b81526000916001600160a01b03169063a9059cbb90859083906370a08231906101b2903090600401610687565b60206040518083038186803b1580156101ca57600080fd5b505afa1580156101de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102029190610629565b6040518363ffffffff1660e01b815260040161021f9291906106b7565b602060405180830381600087803b15801561023957600080fd5b505af115801561024d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027191906105ed565b5081156103625760005b60025481101561036057600281815481106102a657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040517f7050ccd90000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690637050ccd9906102fb908790600190600401610695565b602060405180830381600087803b15801561031557600080fd5b505af1158015610329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034d91906105ed565b50806103588161070d565b91505061027b565b505b5060015b92915050565b600080546040516370a0823160e01b81526001600160a01b03909116906370a082319061039d903090600401610687565b60206040518083038186803b1580156103b557600080fd5b505afa1580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190610629565b600080546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063a9059cbb9061043990339087906004016106b7565b602060405180830381600087803b15801561045357600080fd5b505af1158015610467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b91906105ed565b50811561036257610360336001610177565b60025490565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906104d4903090600401610687565b60206040518083038186803b1580156104ec57600080fd5b505afa158015610500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105249190610629565b905090565b6001546001600160a01b031681565b803561036681610749565b803561036681610760565b805161036681610760565b803561036681610769565b805161036681610769565b60006020828403121561058157600080fd5b600061058d8484610538565b949350505050565b600080604083850312156105a857600080fd5b60006105b48585610538565b92505060206105c585828601610543565b9150509250929050565b6000602082840312156105e157600080fd5b600061058d8484610543565b6000602082840312156105ff57600080fd5b600061058d848461054e565b60006020828403121561061d57600080fd5b600061058d8484610559565b60006020828403121561063b57600080fd5b600061058d8484610564565b6000806040838503121561065a57600080fd5b60006105b48585610559565b61066f816106ee565b82525050565b61066f816106f9565b61066f8161070a565b602081016103668284610666565b604081016106a38285610666565b6106b06020830184610675565b9392505050565b604081016106c58285610666565b6106b0602083018461067e565b602081016103668284610675565b60208101610366828461067e565b6000610366826106fe565b151590565b6001600160a01b031690565b90565b60006107188261070a565b915060001982141561072c5761072c610733565b5060010190565b634e487b7160e01b600052601160045260246000fd5b610752816106ee565b811461075d57600080fd5b50565b610752816106f9565b6107528161070a56fea2646970667358221220c187d3ddefdf5bb7c833261b35e796ae3809c89feea33f05f6dfe0b58b6a06fc64736f6c63430008000033";

export class MockRewardPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _poolToken: string,
    _rewardToken: string,
    _extraRewards: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockRewardPool> {
    return super.deploy(
      _poolToken,
      _rewardToken,
      _extraRewards,
      overrides || {}
    ) as Promise<MockRewardPool>;
  }
  getDeployTransaction(
    _poolToken: string,
    _rewardToken: string,
    _extraRewards: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolToken,
      _rewardToken,
      _extraRewards,
      overrides || {}
    );
  }
  attach(address: string): MockRewardPool {
    return super.attach(address) as MockRewardPool;
  }
  connect(signer: Signer): MockRewardPool__factory {
    return super.connect(signer) as MockRewardPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockRewardPoolInterface {
    return new utils.Interface(_abi) as MockRewardPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockRewardPool {
    return new Contract(address, _abi, signerOrProvider) as MockRewardPool;
  }
}
