/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ee338038062000ee383398101604081905262000034916200017f565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b505050620002d6565b828054620000769062000279565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b6000620001256200011f8462000219565b620001ed565b9050828152602081018484840111156200013e57600080fd5b6200014b84828562000246565b509392505050565b600082601f8301126200016557600080fd5b8151620001778482602086016200010e565b949350505050565b600080604083850312156200019357600080fd5b82516001600160401b03811115620001aa57600080fd5b620001b88582860162000153565b92505060208301516001600160401b03811115620001d557600080fd5b620001e38582860162000153565b9150509250929050565b6040518181016001600160401b0381118282101715620002115762000211620002c0565b604052919050565b60006001600160401b03821115620002355762000235620002c0565b506020601f91909101601f19160190565b60005b838110156200026357818101518382015260200162000249565b8381111562000273576000848401525b50505050565b6002810460018216806200028e57607f821691505b60208210811415620002a457620002a4620002aa565b50919050565b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610bfd80620002e66000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100c9565b8063395093511461014957806370a082311461015c57806395d89b411461016f576100c9565b806318160ddd116100b257806318160ddd1461010c57806323b872dd14610121578063313ce56714610134576100c9565b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101b0565b6040516100e39190610a14565b60405180910390f35b6100ff6100fa3660046106e4565b610242565b6040516100e39190610a06565b610114610260565b6040516100e39190610a9c565b6100ff61012f366004610697565b610266565b61013c6102ff565b6040516100e39190610aaa565b6100ff6101573660046106e4565b610304565b61011461016a366004610637565b610358565b6100d6610373565b6100ff6101853660046106e4565b610382565b6100ff6101983660046106e4565b6103fb565b6101146101ab36600461065d565b61040f565b6060600380546101bf90610b44565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610b44565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b600061025661024f61043a565b848461043e565b5060015b92915050565b60025490565b60006102738484846104f2565b6001600160a01b03841660009081526001602052604081208161029461043a565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102e05760405162461bcd60e51b81526004016102d790610a5c565b60405180910390fd5b6102f4856102ec61043a565b85840361043e565b506001949350505050565b601290565b600061025661031161043a565b84846001600061031f61043a565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103539190610ac5565b61043e565b6001600160a01b031660009081526020819052604090205490565b6060600480546101bf90610b44565b6000806001600061039161043a565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103dd5760405162461bcd60e51b81526004016102d790610a8c565b6103f16103e861043a565b8585840361043e565b5060019392505050565b600061025661040861043a565b84846104f2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104645760405162461bcd60e51b81526004016102d790610a7c565b6001600160a01b03821661048a5760405162461bcd60e51b81526004016102d790610a3c565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104e5908590610a9c565b60405180910390a3505050565b6001600160a01b0383166105185760405162461bcd60e51b81526004016102d790610a6c565b6001600160a01b03821661053e5760405162461bcd60e51b81526004016102d790610a2c565b61054983838361061c565b6001600160a01b038316600090815260208190526040902054818110156105825760405162461bcd60e51b81526004016102d790610a4c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906105b9908490610ac5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106039190610a9c565b60405180910390a361061684848461061c565b50505050565b505050565b803561025a81610ba7565b803561025a81610bbe565b60006020828403121561064957600080fd5b60006106558484610621565b949350505050565b6000806040838503121561067057600080fd5b600061067c8585610621565b925050602061068d85828601610621565b9150509250929050565b6000806000606084860312156106ac57600080fd5b60006106b88686610621565b93505060206106c986828701610621565b92505060406106da8682870161062c565b9150509250925092565b600080604083850312156106f757600080fd5b60006107038585610621565b925050602061068d8582860161062c565b61071d81610afe565b82525050565b600061072e82610ab8565b6107388185610abc565b9350610748818560208601610b18565b61075181610b9d565b9093019392505050565b6000610768602383610abc565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015260400192915050565b60006107c7602283610abc565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726581527f7373000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000610826602683610abc565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206281527f616c616e63650000000000000000000000000000000000000000000000000000602082015260400192915050565b6000610885602883610abc565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206181527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015260400192915050565b60006108e4602583610abc565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616481527f6472657373000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000610943602483610abc565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481527f7265737300000000000000000000000000000000000000000000000000000000602082015260400192915050565b60006109a2602583610abc565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781527f207a65726f000000000000000000000000000000000000000000000000000000602082015260400192915050565b61071d81610b0f565b61071d81610b12565b6020810161025a8284610714565b60208082528101610a258184610723565b9392505050565b6020808252810161025a8161075b565b6020808252810161025a816107ba565b6020808252810161025a81610819565b6020808252810161025a81610878565b6020808252810161025a816108d7565b6020808252810161025a81610936565b6020808252810161025a81610995565b6020810161025a82846109f4565b6020810161025a82846109fd565b5190565b90815260200190565b6000610ad082610b0f565b9150610adb83610b0f565b92508219821115610aee57610aee610b71565b500190565b600061025a82610b03565b151590565b6001600160a01b031690565b90565b60ff1690565b60005b83811015610b33578181015183820152602001610b1b565b838111156106165750506000910152565b600281046001821680610b5857607f821691505b60208210811415610b6b57610b6b610b87565b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b601f01601f191690565b610bb081610af3565b8114610bbb57600080fd5b50565b610bb081610b0f56fea264697066735822122060efaae0a908bcf3ae6ebd6f6615606d6a3137bd01737ae0ba8f95701a0b0b9d64736f6c63430008000033";

export class ERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
