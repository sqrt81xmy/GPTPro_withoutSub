/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockBooster, MockBoosterInterface } from "../MockBooster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "depositAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161042438038061042483398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100f8565b805161006b816100d8565b92915050565b805161006b816100ef565b6000806040838503121561008f57600080fd5b600061009b8585610071565b92505060206100ac85828601610060565b9150509250929050565b600061006b826100cc565b600061006b826100b6565b6001600160a01b031690565b6100e1816100b6565b81146100ec57600080fd5b50565b6100e1816100c1565b61031d806101076000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806360759fce14610030575b600080fd5b61004361003e3660046101fc565b610059565b604051610050919061028d565b60405180910390f35b600080546001546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316926323b872dd92339291169084906370a08231906100c0908590600401610257565b60206040518083038186803b1580156100d857600080fd5b505afa1580156100ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011091906101de565b6040518463ffffffff1660e01b815260040161012e93929190610265565b602060405180830381600087803b15801561014857600080fd5b505af115801561015c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018091906101b8565b50600190505b92915050565b8035610186816102c7565b8051610186816102c7565b8035610186816102de565b8051610186816102de565b6000602082840312156101ca57600080fd5b60006101d68484610197565b949350505050565b6000602082840312156101f057600080fd5b60006101d684846101ad565b6000806040838503121561020f57600080fd5b600061021b85856101a2565b925050602061022c8582860161018c565b9150509250929050565b61023f8161029b565b82525050565b61023f816102a6565b61023f816102c4565b602081016101868284610236565b606081016102738286610236565b6102806020830185610236565b6101d6604083018461024e565b602081016101868284610245565b6000610186826102ab565b151590565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b6102d0816102a6565b81146102db57600080fd5b50565b6102d0816102c456fea2646970667358221220a09f1ef29ff83a856c9bed82999d269e8e38ace2e5c98fef0761d8c90c467eb164736f6c63430008000033";

export class MockBooster__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _poolToken: string,
    _recipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBooster> {
    return super.deploy(
      _poolToken,
      _recipient,
      overrides || {}
    ) as Promise<MockBooster>;
  }
  getDeployTransaction(
    _poolToken: string,
    _recipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_poolToken, _recipient, overrides || {});
  }
  attach(address: string): MockBooster {
    return super.attach(address) as MockBooster;
  }
  connect(signer: Signer): MockBooster__factory {
    return super.connect(signer) as MockBooster__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBoosterInterface {
    return new utils.Interface(_abi) as MockBoosterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBooster {
    return new Contract(address, _abi, signerOrProvider) as MockBooster;
  }
}
