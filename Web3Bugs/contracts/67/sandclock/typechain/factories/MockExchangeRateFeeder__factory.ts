/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockExchangeRateFeeder,
  MockExchangeRateFeederInterface,
} from "../MockExchangeRateFeeder";

const _abi = [
  {
    inputs: [],
    name: "exchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "exchangeRateOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_exchangeRate",
        type: "uint256",
      },
    ],
    name: "setExchangeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610122806100206000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633ba0b9a9146041578063cdd2193914605b578063db068e0e14606e575b600080fd5b604960005481565b60405190815260200160405180910390f35b604960663660046080565b505060005490565b607e607936600460d4565b600055565b005b60008060408385031215609257600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811460b557600080fd5b91506020830135801515811460c957600080fd5b809150509250929050565b60006020828403121560e557600080fd5b503591905056fea2646970667358221220bc3cff1f7a6ce4daab1902d03d3d0280ea66bdf4e1251f849912969c0874eeab64736f6c634300080a0033";

type MockExchangeRateFeederConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockExchangeRateFeederConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockExchangeRateFeeder__factory extends ContractFactory {
  constructor(...args: MockExchangeRateFeederConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockExchangeRateFeeder> {
    return super.deploy(overrides || {}) as Promise<MockExchangeRateFeeder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockExchangeRateFeeder {
    return super.attach(address) as MockExchangeRateFeeder;
  }
  connect(signer: Signer): MockExchangeRateFeeder__factory {
    return super.connect(signer) as MockExchangeRateFeeder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockExchangeRateFeederInterface {
    return new utils.Interface(_abi) as MockExchangeRateFeederInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockExchangeRateFeeder {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockExchangeRateFeeder;
  }
}
