/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockStrategy, MockStrategyInterface } from "../MockStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethAnchorRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_exchangeRateFeeder",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_ustToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_aUstToken",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_perfFeePct",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PerfFeeClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pct",
        type: "uint256",
      },
    ],
    name: "PerfFeePctUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ProfitShared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "trusted",
        type: "bool",
      },
    ],
    name: "UserTrustUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "aUstToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "convertedUst",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositOperationLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "depositOperations",
    outputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "doHardWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ethAnchorRouter",
    outputs: [
      {
        internalType: "contract IEthAnchorRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRateFeeder",
    outputs: [
      {
        internalType: "contract IExchangeRateFeeder",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "finishDepositStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "finishRedeemStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "initRedeemStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investedAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTrusted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingDeposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRedeems",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perfFeePct",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemOperationLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "redeemOperations",
    outputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "trusted",
        type: "bool",
      },
    ],
    name: "setIsTrusted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_perfFeePct",
        type: "uint16",
      },
    ],
    name: "setPerfFeePct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ustToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ff538038062001ff5833981016040819052620000349162000727565b3360008181526020818152604091829020805460ff191660019081179091559151918252899289928992899289928992899291829182917fe95aec380cae16330d146d5499ef7db6f3657e477104a733e771bc09e500d986910160405180910390a2506001600160a01b038616620000dd5760405162461bcd60e51b8152602060048201526007602482015266183c1030b2323960c91b60448201526064015b60405180910390fd5b6001600160a01b0385166200011f5760405162461bcd60e51b8152602060048201526007602482015266183c1030b2323960c91b6044820152606401620000d4565b6001600160a01b038416620001615760405162461bcd60e51b8152602060048201526007602482015266183c1030b2323960c91b6044820152606401620000d4565b6001600160a01b038316620001a35760405162461bcd60e51b8152602060048201526007602482015266183c1030b2323960c91b6044820152606401620000d4565b620001bd8261ffff166200034d60201b62000f4c1760201c565b620001f95760405162461bcd60e51b815260206004820152600b60248201526a1a5b9d985b1a59081c18dd60aa1b6044820152606401620000d4565b600380546001600160a01b03808a166001600160a01b03199283161790925560028054928b16929091168217905560408051636f307dc360e01b81529051636f307dc3916004808201926020929091908290030181865afa15801562000263573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002899190620007d8565b600180546001600160a01b03199081166001600160a01b039384161790915560068054821689841617905560078054821688841617905560048054909116868316908117909155600580549286166001600160b01b031990931692909217600160a01b61ffff8616021790915562000311908760001962000355602090811b62000f5417901c565b60055462000338906001600160a01b03168760001962000355602090811b62000f5417901c565b505050505050505050505050505050620008bc565b612710101590565b801580620003d35750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015620003ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003d19190620007f8565b155b620004475760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401620000d4565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b179091526200049f918591620004a416565b505050565b600062000500826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200058260201b62001107179092919060201c565b8051909150156200049f578080602001905181019062000521919062000812565b6200049f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620000d4565b60606200059384846000856200059d565b90505b9392505050565b606082471015620006005760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620000d4565b843b620006505760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620000d4565b600080866001600160a01b031685876040516200066e919062000869565b60006040518083038185875af1925050503d8060008114620006ad576040519150601f19603f3d011682016040523d82523d6000602084013e620006b2565b606091505b509092509050620006c5828286620006d0565b979650505050505050565b60608315620006e157508162000596565b825115620006f25782518084602001fd5b8160405162461bcd60e51b8152600401620000d4919062000887565b6001600160a01b03811681146200072457600080fd5b50565b600080600080600080600060e0888a0312156200074357600080fd5b875162000750816200070e565b602089015190975062000763816200070e565b604089015190965062000776816200070e565b606089015190955062000789816200070e565b60808901519094506200079c816200070e565b60a0890151909350620007af816200070e565b60c089015190925061ffff81168114620007c857600080fd5b8091505092959891949750929550565b600060208284031215620007eb57600080fd5b815162000596816200070e565b6000602082840312156200080b57600080fd5b5051919050565b6000602082840312156200082557600080fd5b815180151581146200059657600080fd5b60005b838110156200085357818101518382015260200162000839565b8381111562000863576000848401525b50505050565b600082516200087d81846020870162000836565b9190910192915050565b6020815260008251806020840152620008a881604085016020870162000836565b601f01601f19169190910160400192915050565b61172980620008cc6000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c806362eac09d116100ee578063958437ee11610097578063ce8c42e811610071578063ce8c42e81461034e578063d9db2b7714610361578063eb0469e514610389578063fbfa77cf1461039c57600080fd5b8063958437ee1461030057806396d6487914610313578063bfd131f11461034657600080fd5b80636f307dc3116100c85780636f307dc3146102d1578063781338c0146102e45780639119c067146102f757600080fd5b806362eac09d146102a35780636abc8425146102ab5780636e612f9b146102be57600080fd5b80634ad0b68411610150578063563233f61161012a578063563233f6146102745780635c074f441461028757806361d027b31461029057600080fd5b80634ad0b684146102515780634fa5d85414610259578063524737541461026157600080fd5b80631bbec15e116101815780631bbec15e14610207578063428eab1e146102325780634a614cf41461024957600080fd5b806307caf901146101a85780631312e0c5146101bd5780631393916a146101f4575b600080fd5b6101bb6101b63660046114b9565b6103af565b005b6101d06101cb3660046114b9565b6105fc565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6101bb6102023660046114f5565b610634565b60055461021a906001600160a01b031681565b6040516001600160a01b0390911681526020016101eb565b61023b600c5481565b6040519081526020016101eb565b600a5461023b565b61023b6106f0565b6101bb6107e7565b6101bb61026f3660046114b9565b61084a565b6101bb61028236600461152e565b610b0a565b61023b60085481565b60035461021a906001600160a01b031681565b600b5461023b565b6101bb6102b93660046114b9565b610c31565b60075461021a906001600160a01b031681565b60015461021a906001600160a01b031681565b60045461021a906001600160a01b031681565b61023b60095481565b6101d061030e3660046114b9565b610e0c565b610336610321366004611552565b60006020819052908152604090205460ff1681565b60405190151581526020016101eb565b6101bb610e1c565b6101bb61035c3660046114b9565b610ecb565b60055461037690600160a01b900461ffff1681565b60405161ffff90911681526020016101eb565b60065461021a906001600160a01b031681565b60025461021a906001600160a01b031681565b6002546001600160a01b03163314806103d757503360009081526020819052604090205460ff165b6104155760405162461bcd60e51b815260206004820152600a6024820152691c995cdd1c9a58dd195960b21b60448201526064015b60405180910390fd5b600061041f611120565b9050600082116104715760405162461bcd60e51b815260206004820152600860248201527f616d6f756e742030000000000000000000000000000000000000000000000000604482015260640161040c565b818110156104c15760405162461bcd60e51b815260206004820152600c60248201527f696e73756666696369656e740000000000000000000000000000000000000000604482015260640161040c565b81600960008282546104d39190611585565b90915550506006546040517f07caf901000000000000000000000000000000000000000000000000000000008152600481018490526000916001600160a01b0316906307caf901906024016020604051808303816000875af115801561053d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610561919061159d565b604080518082019091526001600160a01b03918216815260208101948552600b805460018101825560009190915290517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9600290920291820180546001600160a01b031916919093161790915592517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dba909301929092555050565b600a818154811061060c57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b3360009081526020819052604090205460ff166106935760405162461bcd60e51b815260206004820152600960248201527f554e545255535445440000000000000000000000000000000000000000000000604482015260640161040c565b6001600160a01b03821660008181526020818152604091829020805460ff191685151590811790915591519182527fe95aec380cae16330d146d5499ef7db6f3657e477104a733e771bc09e500d986910160405180910390a25050565b6000806008546106fe611193565b6107089190611585565b90506000600954610717611120565b6107219190611585565b6007546005546040517fcdd219390000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260016024820152929350670de0b6b3a7640000928492919091169063cdd2193990604401602060405180830381865afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c291906115ba565b6107cc91906115d3565b6107d691906115f2565b6107e09083611585565b9250505090565b6002546001600160a01b031633148061080f57503360009081526020819052604090205460ff165b6108485760405162461bcd60e51b815260206004820152600a6024820152691c995cdd1c9a58dd195960b21b604482015260640161040c565b565b600b5481106108895760405162461bcd60e51b815260206004820152600b60248201526a6e6f742072756e6e696e6760a81b604482015260640161040c565b6000600b828154811061089e5761089e611614565b9060005260206000209060020201905060006009546108bb611120565b6108c59190611585565b90506000818360010154600c546108dc91906115d3565b6108e691906115f2565b905060006108f26111c4565b60065485546040517f7249abb90000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529293501690637249abb990602401600060405180830381600087803b15801561095557600080fd5b505af1158015610969573d6000803e3d6000fd5b505050506000816109786111c4565b610982919061162a565b905060008382116109945760006109b6565b6005546109b690600160a01b900461ffff166109b0868561162a565b906111fa565b90508015610a0f576003546004546109db916001600160a01b03918216911683611213565b6040518181527f400bdf25b31ddf5f320a4bc5dd19386740a74e689d95b01e02c4b499b51b99549060200160405180910390a15b83600c6000828254610a21919061162a565b9091555050600186015460098054600090610a3d90849061162a565b9091555050600b8054610a529060019061162a565b81548110610a6257610a62611614565b600091825260209091206002909102015486546001600160a01b0319166001600160a01b03909116178655600b8054610a9d9060019061162a565b81548110610aad57610aad611614565b9060005260206000209060020201600101548660010181905550600b805480610ad857610ad8611641565b60008281526020812060026000199093019283020180546001600160a01b031916815560010155905550505050505050565b6002546001600160a01b0316331480610b3257503360009081526020819052604090205460ff165b610b6b5760405162461bcd60e51b815260206004820152600a6024820152691c995cdd1c9a58dd195960b21b604482015260640161040c565b61ffff81166127101015610bc15760405162461bcd60e51b815260206004820152600b60248201527f696e76616c696420706374000000000000000000000000000000000000000000604482015260640161040c565b600580547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff16600160a01b61ffff8416908102919091179091556040519081527f3c1be17360b5ce4015d5d5ddd50de6e7e9d53d49907f45d72a202e159306938c9060200160405180910390a150565b600a548110610c705760405162461bcd60e51b815260206004820152600b60248201526a6e6f742072756e6e696e6760a81b604482015260640161040c565b6000600a8281548110610c8557610c85611614565b6000918252602090912060065460029092020180546040517fac1a23220000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201529193509091169063ac1a232290602401600060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b50505050806001015460086000828254610d28919061162a565b90915550506001810154600c8054600090610d44908490611585565b9091555050600a8054610d599060019061162a565b81548110610d6957610d69611614565b600091825260209091206002909102015481546001600160a01b0319166001600160a01b03909116178155600a8054610da49060019061162a565b81548110610db457610db4611614565b9060005260206000209060020201600101548160010181905550600a805480610ddf57610ddf611641565b60008281526020812060026000199093019283020180546001600160a01b03191681556001015590555050565b600b818154811061060c57600080fd5b6002546001600160a01b0316331480610e4457503360009081526020819052604090205460ff165b610e7d5760405162461bcd60e51b815260206004820152600a6024820152691c995cdd1c9a58dd195960b21b604482015260640161040c565b6000610e87611120565b90508015610e9857610e98816103af565b6000610ea2611193565b90508015610ec757600254600154610ec7916001600160a01b03918216911683611213565b5050565b6002546001600160a01b0316331480610ef357503360009081526020819052604090205460ff165b610f2c5760405162461bcd60e51b815260206004820152600a6024820152691c995cdd1c9a58dd195960b21b604482015260640161040c565b600254600154610f49916001600160a01b03918216911683611213565b50565b612710101590565b801580610fe757506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe591906115ba565b155b6110595760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161040c565b6040516001600160a01b0383166024820152604481018290526111029084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261125c565b505050565b60606111168484600085611341565b90505b9392505050565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024015b602060405180830381865afa15801561116a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118e91906115ba565b905090565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240161114d565b600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a082319060240161114d565b600061271061120983856115d3565b61111991906115f2565b6040516001600160a01b0383166024820152604481018290526111029084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161109e565b60006112b1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111079092919063ffffffff16565b80519091501561110257808060200190518101906112cf9190611657565b6111025760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161040c565b6060824710156113b95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161040c565b843b6114075760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161040c565b600080866001600160a01b0316858760405161142391906116a4565b60006040518083038185875af1925050503d8060008114611460576040519150601f19603f3d011682016040523d82523d6000602084013e611465565b606091505b5091509150611475828286611480565b979650505050505050565b6060831561148f575081611119565b82511561149f5782518084602001fd5b8160405162461bcd60e51b815260040161040c91906116c0565b6000602082840312156114cb57600080fd5b5035919050565b6001600160a01b0381168114610f4957600080fd5b8015158114610f4957600080fd5b6000806040838503121561150857600080fd5b8235611513816114d2565b91506020830135611523816114e7565b809150509250929050565b60006020828403121561154057600080fd5b813561ffff8116811461111957600080fd5b60006020828403121561156457600080fd5b8135611119816114d2565b634e487b7160e01b600052601160045260246000fd5b600082198211156115985761159861156f565b500190565b6000602082840312156115af57600080fd5b8151611119816114d2565b6000602082840312156115cc57600080fd5b5051919050565b60008160001904831182151516156115ed576115ed61156f565b500290565b60008261160f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60008282101561163c5761163c61156f565b500390565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561166957600080fd5b8151611119816114e7565b60005b8381101561168f578181015183820152602001611677565b8381111561169e576000848401525b50505050565b600082516116b6818460208701611674565b9190910192915050565b60208152600082518060208401526116df816040850160208701611674565b601f01601f1916919091016040019291505056fea26469706673582212206a5b8fea2e36c8bf017336a1b95ab459854d83cf8d6c50071d05c8c3c8371b7d64736f6c634300080a0033";

type MockStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStrategy__factory extends ContractFactory {
  constructor(...args: MockStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _vault: string,
    _treasury: string,
    _ethAnchorRouter: string,
    _exchangeRateFeeder: string,
    _ustToken: string,
    _aUstToken: string,
    _perfFeePct: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockStrategy> {
    return super.deploy(
      _vault,
      _treasury,
      _ethAnchorRouter,
      _exchangeRateFeeder,
      _ustToken,
      _aUstToken,
      _perfFeePct,
      overrides || {}
    ) as Promise<MockStrategy>;
  }
  getDeployTransaction(
    _vault: string,
    _treasury: string,
    _ethAnchorRouter: string,
    _exchangeRateFeeder: string,
    _ustToken: string,
    _aUstToken: string,
    _perfFeePct: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vault,
      _treasury,
      _ethAnchorRouter,
      _exchangeRateFeeder,
      _ustToken,
      _aUstToken,
      _perfFeePct,
      overrides || {}
    );
  }
  attach(address: string): MockStrategy {
    return super.attach(address) as MockStrategy;
  }
  connect(signer: Signer): MockStrategy__factory {
    return super.connect(signer) as MockStrategy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStrategyInterface {
    return new utils.Interface(_abi) as MockStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStrategy {
    return new Contract(address, _abi, signerOrProvider) as MockStrategy;
  }
}
