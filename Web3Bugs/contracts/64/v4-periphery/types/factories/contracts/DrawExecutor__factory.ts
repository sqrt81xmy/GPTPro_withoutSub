/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DrawExecutor,
  DrawExecutorInterface,
} from "../../contracts/DrawExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_originChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_drawDispatcher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "contract IDrawBuffer",
        name: "_drawBuffer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "winningRandomNumber",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "drawId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "beaconPeriodStartedAt",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "beaconPeriodSeconds",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IDrawBeacon.Draw",
        name: "draw",
        type: "tuple",
      },
    ],
    name: "DrawPushed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "winningRandomNumber",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "drawId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "beaconPeriodStartedAt",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "beaconPeriodSeconds",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IDrawBeacon.Draw[]",
        name: "draws",
        type: "tuple[]",
      },
    ],
    name: "DrawsPushed",
    type: "event",
  },
  {
    inputs: [],
    name: "drawBuffer",
    outputs: [
      {
        internalType: "contract IDrawBuffer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drawDispatcher",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
    ],
    name: "isTrustedExecutor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "originChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "winningRandomNumber",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "drawId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "beaconPeriodStartedAt",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "beaconPeriodSeconds",
            type: "uint32",
          },
        ],
        internalType: "struct IDrawBeacon.Draw",
        name: "_draw",
        type: "tuple",
      },
    ],
    name: "pushDraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "winningRandomNumber",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "drawId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "beaconPeriodStartedAt",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "beaconPeriodSeconds",
            type: "uint32",
          },
        ],
        internalType: "struct IDrawBeacon.Draw[]",
        name: "_draws",
        type: "tuple[]",
      },
    ],
    name: "pushDraws",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedExecutor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610b86380380610b86833981016040819052610030916101bb565b816001600160a01b03811661008c5760405162461bcd60e51b815260206004820152601960248201527f6578656375746f722d6e6f742d7a65726f2d616464726573730000000000000060448201526064015b60405180910390fd5b60601b6001600160601b031916608052836100e95760405162461bcd60e51b815260206004820152601960248201527f44452f6f726967696e436861696e49642d6e6f742d7a65726f000000000000006044820152606401610083565b6001600160a01b03831661013f5760405162461bcd60e51b815260206004820152601f60248201527f44452f64726177446973706174636865722d6e6f742d7a65726f2d61647273006044820152606401610083565b6001600160a01b0381166101955760405162461bcd60e51b815260206004820152601e60248201527f44452f647261774275666665722d6e6f742d7a65726f2d6164647265737300006044820152606401610083565b60a093909352506001600160601b0319606091821b811660c05291901b1660e052610228565b600080600080608085870312156101d157600080fd5b8451935060208501516101e381610210565b60408601519093506101f481610210565b606086015190925061020581610210565b939692955090935050565b6001600160a01b038116811461022557600080fd5b50565b60805160601c60a05160c05160601c60e05160601c6108ed610299600039600081816101920152818161022001526102f80152600081816101b9015261050c015260008181609c015261040c01526000818160d6015281816101400152818161048701526105f001526108ed6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063555dd5601161005b578063555dd5601461011d578063672657ca14610130578063ce343bb61461018d578063d0831b0d146101b457600080fd5b8063089eb925146100825780630ac7f5611461009757806339584b19146100d1575b600080fd5b61009561009036600461070e565b6101db565b005b6100be7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100f87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100c8565b61009561012b366004610699565b6102e2565b61017d61013e36600461065c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff90811691161490565b60405190151581526020016100c8565b6100f87f000000000000000000000000000000000000000000000000000000000000000081565b6100f87f000000000000000000000000000000000000000000000000000000000000000081565b6101e361040a565b6040517f089eb92500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063089eb925906102559084906004016107ff565b602060405180830381600087803b15801561026f57600080fd5b505af1158015610283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a79190610726565b507f857d942e6b33b7d0b971df9330addcbc31d65f0acfaeb894b8096ed1417de5fd816040516102d791906107ff565b60405180910390a150565b6102ea61040a565b8060005b818110156103cb577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663089eb92585858481811061034457610344610873565b905060a002016040518263ffffffff1660e01b815260040161036691906107ff565b602060405180830381600087803b15801561038057600080fd5b505af1158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b89190610726565b50806103c381610813565b9150506102ee565b507f1c1d0c61b54b8e97768a1a183f91b7f55f13b25891958d38f426393937da08f683836040516103fd9291906107bd565b60405180910390a1505050565b7f00000000000000000000000000000000000000000000000000000000000000006104336105ae565b146104855760405162461bcd60e51b815260206004820152601b60248201527f44452f6c312d636861696e49642d6e6f742d737570706f72746564000000000060448201526064015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16331461050a5760405162461bcd60e51b815260206004820152601960248201527f44452f6c322d73656e6465722d6e6f742d6578656375746f7200000000000000604482015260640161047c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105496105e1565b73ffffffffffffffffffffffffffffffffffffffff16146105ac5760405162461bcd60e51b815260206004820152601b60248201527f44452f6c312d73656e6465722d6e6f742d646973706174636865720000000000604482015260640161047c565b565b6000603436106105de57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcc3601355b90565b336014361080159061062c57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff908116908216145b156105de57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b60006020828403121561066e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461069257600080fd5b9392505050565b600080602083850312156106ac57600080fd5b823567ffffffffffffffff808211156106c457600080fd5b818501915085601f8301126106d857600080fd5b8135818111156106e757600080fd5b86602060a0830285010111156106fc57600080fd5b60209290920196919550909350505050565b600060a0828403121561072057600080fd5b50919050565b60006020828403121561073857600080fd5b8151610692816108a2565b803582526020810135610755816108a2565b63ffffffff908116602084015260408201359067ffffffffffffffff80831680841461078057600080fd5b604086015260608401359250821680831461079a57600080fd5b6060850152608083013591506107af826108a2565b808216608085015250505050565b6020808252810182905260008360408301825b858110156107f5576107e28284610743565b60a09283019291909101906001016107d0565b5095945050505050565b60a0810161080d8284610743565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561086c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b63ffffffff811681146108b457600080fd5b5056fea2646970667358221220c77b85edb8fea9d31c48c5835049eeeb4e3f60306080f0e4a1c6dfc20acdf2e664736f6c63430008060033";

type DrawExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DrawExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DrawExecutor__factory extends ContractFactory {
  constructor(...args: DrawExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _originChainId: PromiseOrValue<BigNumberish>,
    _drawDispatcher: PromiseOrValue<string>,
    _executor: PromiseOrValue<string>,
    _drawBuffer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DrawExecutor> {
    return super.deploy(
      _originChainId,
      _drawDispatcher,
      _executor,
      _drawBuffer,
      overrides || {}
    ) as Promise<DrawExecutor>;
  }
  override getDeployTransaction(
    _originChainId: PromiseOrValue<BigNumberish>,
    _drawDispatcher: PromiseOrValue<string>,
    _executor: PromiseOrValue<string>,
    _drawBuffer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _originChainId,
      _drawDispatcher,
      _executor,
      _drawBuffer,
      overrides || {}
    );
  }
  override attach(address: string): DrawExecutor {
    return super.attach(address) as DrawExecutor;
  }
  override connect(signer: Signer): DrawExecutor__factory {
    return super.connect(signer) as DrawExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DrawExecutorInterface {
    return new utils.Interface(_abi) as DrawExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DrawExecutor {
    return new Contract(address, _abi, signerOrProvider) as DrawExecutor;
  }
}
