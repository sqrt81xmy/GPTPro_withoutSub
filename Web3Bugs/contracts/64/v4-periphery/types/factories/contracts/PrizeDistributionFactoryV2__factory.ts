/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PrizeDistributionFactoryV2,
  PrizeDistributionFactoryV2Interface,
} from "../../contracts/PrizeDistributionFactoryV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IPrizeTierHistoryV2",
        name: "_prizeTierHistory",
        type: "address",
      },
      {
        internalType: "contract IDrawBuffer",
        name: "_drawBuffer",
        type: "address",
      },
      {
        internalType: "contract IPrizeDistributionBuffer",
        name: "_prizeDistributionBuffer",
        type: "address",
      },
      {
        internalType: "contract ITicket",
        name: "_ticket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minPickCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "OwnershipOffered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "drawId",
        type: "uint32",
      },
    ],
    name: "PrizeDistributionPushed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "drawId",
        type: "uint32",
      },
    ],
    name: "PrizeDistributionSet",
    type: "event",
  },
  {
    inputs: [],
    name: "RATE_NORMALIZATION",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_drawId",
        type: "uint32",
      },
    ],
    name: "calculatePrizeDistribution",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "bitRangeSize",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "matchCardinality",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "startTimestampOffset",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTimestampOffset",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxPicksPerUser",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "expiryDuration",
            type: "uint32",
          },
          {
            internalType: "uint104",
            name: "numberOfPicks",
            type: "uint104",
          },
          {
            internalType: "uint32[16]",
            name: "tiers",
            type: "uint32[16]",
          },
          {
            internalType: "uint256",
            name: "prize",
            type: "uint256",
          },
        ],
        internalType: "struct IPrizeDistributionSource.PrizeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "drawBuffer",
    outputs: [
      {
        internalType: "contract IDrawBuffer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPickCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prizeDistributionBuffer",
    outputs: [
      {
        internalType: "contract IPrizeDistributionBuffer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prizeTierHistory",
    outputs: [
      {
        internalType: "contract IPrizeTierHistoryV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_drawId",
        type: "uint32",
      },
    ],
    name: "pushPrizeDistribution",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "bitRangeSize",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "matchCardinality",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "startTimestampOffset",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTimestampOffset",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxPicksPerUser",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "expiryDuration",
            type: "uint32",
          },
          {
            internalType: "uint104",
            name: "numberOfPicks",
            type: "uint104",
          },
          {
            internalType: "uint32[16]",
            name: "tiers",
            type: "uint32[16]",
          },
          {
            internalType: "uint256",
            name: "prize",
            type: "uint256",
          },
        ],
        internalType: "struct IPrizeDistributionSource.PrizeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_drawId",
        type: "uint32",
      },
    ],
    name: "setPrizeDistribution",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "bitRangeSize",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "matchCardinality",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "startTimestampOffset",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTimestampOffset",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxPicksPerUser",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "expiryDuration",
            type: "uint32",
          },
          {
            internalType: "uint104",
            name: "numberOfPicks",
            type: "uint104",
          },
          {
            internalType: "uint32[16]",
            name: "tiers",
            type: "uint32[16]",
          },
          {
            internalType: "uint256",
            name: "prize",
            type: "uint256",
          },
        ],
        internalType: "struct IPrizeDistributionSource.PrizeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticket",
    outputs: [
      {
        internalType: "contract ITicket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200184f3803806200184f833981016040819052620000359162000284565b85620000418162000234565b506001600160a01b0386166200008f5760405162461bcd60e51b815260206004820152600e60248201526d5044432f6f776e65722d7a65726f60901b60448201526064015b60405180910390fd5b6001600160a01b038516620000d65760405162461bcd60e51b815260206004820152600c60248201526b5044432f7074682d7a65726f60a01b604482015260640162000086565b6001600160a01b0384166200011c5760405162461bcd60e51b815260206004820152600b60248201526a5044432f64622d7a65726f60a81b604482015260640162000086565b6001600160a01b038316620001635760405162461bcd60e51b815260206004820152600c60248201526b5044432f7064622d7a65726f60a01b604482015260640162000086565b6001600160a01b038216620001ad5760405162461bcd60e51b815260206004820152600f60248201526e5044432f7469636b65742d7a65726f60881b604482015260640162000086565b60008111620001ff5760405162461bcd60e51b815260206004820152601560248201527f5044432f7069636b2d636f73742d67742d7a65726f0000000000000000000000604482015260640162000086565b610100526001600160601b0319606094851b811660805292841b831660a05290831b821660c05290911b1660e0525062000325565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008060008060c087890312156200029e57600080fd5b8651620002ab816200030c565b6020880151909650620002be816200030c565b6040880151909550620002d1816200030c565b6060880151909450620002e4816200030c565b6080880151909350620002f7816200030c565b8092505060a087015190509295509295509295565b6001600160a01b03811681146200032257600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c610100516114b06200039f6000396000818160f401526109d30152600081816101d1015261090001526000818161012e0152818161033e0152610447015260008181610224015261086201526000818161018d015261079d01526114b06000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063ce343bb611610066578063ce343bb61461021f578063e30c397814610246578063e6a6b1a914610257578063f2fde38b1461027757600080fd5b8063715018a6146101f3578063785203d2146101fb5780638da5cb5b1461020e57600080fd5b80633cd4b918116100c85780633cd4b918146101885780634576254b146101af5780634e71e0c8146101c25780636cc25db7146101cc57600080fd5b8063082d80ff146100ef5780630840bbdd146101295780633c92e20d14610168575b600080fd5b6101167f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101507f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610120565b61017b61017636600461106e565b61028a565b6040516101209190611201565b6101507f000000000000000000000000000000000000000000000000000000000000000081565b61017b6101bd36600461106e565b610401565b6101ca610508565b005b6101507f000000000000000000000000000000000000000000000000000000000000000081565b6101ca610596565b61017b61020936600461106e565b61060b565b6000546001600160a01b0316610150565b6101507f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b0316610150565b610262633b9aca0081565b60405163ffffffff9091168152602001610120565b6101ca610285366004610e45565b610622565b610292610d2d565b336102a56000546001600160a01b031690565b6001600160a01b0316146103005760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e6572000000000000000060448201526064015b60405180910390fd5b600061030b8361075e565b6040517fce336ce90000000000000000000000000000000000000000000000000000000081529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ce336ce9906103759086908590600401611210565b602060405180830381600087803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c7919061108b565b5060405163ffffffff8416907f698b61f37e4acba2673f47e032b968922fe29323cc6e60ea9cf99c3eff75cd3090600090a290505b919050565b610409610d2d565b60006104148361075e565b6040517f1124e1dc0000000000000000000000000000000000000000000000000000000081529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631124e1dc9061047e9086908590600401611210565b602060405180830381600087803b15801561049857600080fd5b505af11580156104ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d09190610f1b565b5060405163ffffffff8416907f622f68684c34385911683ccecb27900a10d7c8860cb20b153b1ff20d5c4f7a4490600090a292915050565b6001546001600160a01b031633146105625760405162461bcd60e51b815260206004820152601f60248201527f4f776e61626c652f63616c6c65722d6e6f742d70656e64696e674f776e65720060448201526064016102f7565b600154610577906001600160a01b0316610a99565b6001805473ffffffffffffffffffffffffffffffffffffffff19169055565b336105a96000546001600160a01b031690565b6001600160a01b0316146105ff5760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e6572000000000000000060448201526064016102f7565b6106096000610a99565b565b610613610d2d565b61061c8261075e565b92915050565b336106356000546001600160a01b031690565b6001600160a01b03161461068b5760405162461bcd60e51b815260206004820152601860248201527f4f776e61626c652f63616c6c65722d6e6f742d6f776e6572000000000000000060448201526064016102f7565b6001600160a01b0381166107075760405162461bcd60e51b815260206004820152602560248201527f4f776e61626c652f70656e64696e674f776e65722d6e6f742d7a65726f2d616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016102f7565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f239a2ddded15777fa246aed5f7e1a9bc69a39d4eb4a397034d1d85766cca7d4c90600090a250565b610766610d2d565b6040517f4aac253d00000000000000000000000000000000000000000000000000000000815263ffffffff831660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634aac253d906024016102e06040518083038186803b1580156107e857600080fd5b505afa1580156107fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108209190610fc8565b6040517f83c34aaf00000000000000000000000000000000000000000000000000000000815263ffffffff851660048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906383c34aaf9060240160a06040518083038186803b1580156108a457600080fd5b505afa1580156108b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dc9190610f3d565b90506000806108f8836040015184608001518660800151610af6565b9150915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638e6d536a84846040518363ffffffff1660e01b815260040161094c9291906111d3565b60006040518083038186803b15801561096457600080fd5b505afa158015610978573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109a09190810190610e6e565b6000815181106109b2576109b2611439565b602002602001015190506000806109f887600001518860c001518960a001517f000000000000000000000000000000000000000000000000000000000000000087610bc5565b915091506000604051806101200160405280896000015160ff1681526020018460ff168152602001886080015163ffffffff168152602001896080015163ffffffff168152602001896040015163ffffffff168152602001896060015163ffffffff168152602001836cffffffffffffffffffffffffff1681526020018960e0015181526020018960c0015181525090508098505050505050505050919050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805160018082528183019092526060918291600091602080830190803683375050604080516001808252818301909252929350600092915060208083019080368337019050509050610b5063ffffffff8716886113da565b82600081518110610b6357610b63611439565b67ffffffffffffffff90921660209283029190910190910152610b8c63ffffffff8616886113da565b81600081518110610b9f57610b9f611439565b67ffffffffffffffff909216602092830291909101909101529092509050935093915050565b6000808086610bda8563ffffffff89166113bb565b610be491906112ab565b905080610bf5576001925050610c7b565b6000610c078663ffffffff89166113bb565b610c15633b9aca008a6113bb565b610c1f91906112ab565b90505b83610c2c81611403565b9450819050610c458a610c40876001611286565b610c85565b10610c2257610c76633b9aca0083610c5d8c88610c85565b610c6791906113bb565b610c7191906112ab565b610ca4565b925050505b9550959350505050565b600081610c93846002611310565b610c9d9190611310565b9392505050565b60006cffffffffffffffffffffffffff821115610d295760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f303420626974730000000000000000000000000000000000000000000000000060648201526084016102f7565b5090565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260e08101610d73610d80565b8152602001600081525090565b6040518061020001604052806010906020820280368337509192915050565b600082601f830112610db057600080fd5b60405161020080820182811067ffffffffffffffff82111715610dd557610dd561144f565b6040528184828101871015610de957600080fd5b600092505b6010831015610e17578051610e0281611465565b82526001929092019160209182019101610dee565b509195945050505050565b80516103fc81611465565b805167ffffffffffffffff811681146103fc57600080fd5b600060208284031215610e5757600080fd5b81356001600160a01b0381168114610c9d57600080fd5b60006020808385031215610e8157600080fd5b825167ffffffffffffffff80821115610e9957600080fd5b818501915085601f830112610ead57600080fd5b815181811115610ebf57610ebf61144f565b8060051b9150610ed0848301611255565b8181528481019084860184860187018a1015610eeb57600080fd5b600095505b83861015610f0e578051835260019590950194918601918601610ef0565b5098975050505050505050565b600060208284031215610f2d57600080fd5b81518015158114610c9d57600080fd5b600060a08284031215610f4f57600080fd5b60405160a0810181811067ffffffffffffffff82111715610f7257610f7261144f565b604052825181526020830151610f8781611465565b6020820152610f9860408401610e2d565b6040820152610fa960608401610e2d565b60608201526080830151610fbc81611465565b60808201529392505050565b60006102e08284031215610fdb57600080fd5b610fe361122b565b825160ff81168114610ff457600080fd5b815261100260208401610e22565b602082015261101360408401610e22565b604082015261102460608401610e22565b606082015261103560808401610e22565b608082015261104660a08401610e22565b60a082015260c083015160c08201526110628460e08501610d9f565b60e08201529392505050565b60006020828403121561108057600080fd5b8135610c9d81611465565b60006020828403121561109d57600080fd5b8151610c9d81611465565b8060005b60108110156110d157815163ffffffff168452602093840193909101906001016110ac565b50505050565b600081518084526020808501945080840160005b8381101561111157815167ffffffffffffffff16875295820195908201906001016110eb565b509495945050505050565b60ff815116825260ff60208201511660208301526040810151611147604084018263ffffffff169052565b50606081015161115f606084018263ffffffff169052565b506080810151611177608084018263ffffffff169052565b5060a081015161118f60a084018263ffffffff169052565b5060c08101516111b060c08401826cffffffffffffffffffffffffff169052565b5060e08101516111c360e08401826110a8565b5061010001516102e09190910152565b6040815260006111e660408301856110d7565b82810360208401526111f881856110d7565b95945050505050565b610300810161061c828461111c565b63ffffffff831681526103208101610c9d602083018461111c565b604051610100810167ffffffffffffffff8111828210171561124f5761124f61144f565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561127e5761127e61144f565b604052919050565b600060ff821660ff84168060ff038211156112a3576112a3611423565b019392505050565b6000826112c857634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156113085781600019048211156112ee576112ee611423565b808516156112fb57918102915b93841c93908002906112d2565b509250929050565b6000610c9d60ff8416836000826113295750600161061c565b816113365750600061061c565b816001811461134c576002811461135657611372565b600191505061061c565b60ff84111561136757611367611423565b50506001821b61061c565b5060208310610133831016604e8410600b8410161715611395575081810a61061c565b61139f83836112cd565b80600019048211156113b3576113b3611423565b029392505050565b60008160001904831182151516156113d5576113d5611423565b500290565b600067ffffffffffffffff838116908316818110156113fb576113fb611423565b039392505050565b600060ff821660ff81141561141a5761141a611423565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b63ffffffff8116811461147757600080fd5b5056fea264697066735822122046d5fedf753fc5d09f80f50ae59e020475270730fb455c59411fde7f308bc78364736f6c63430008060033";

type PrizeDistributionFactoryV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrizeDistributionFactoryV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrizeDistributionFactoryV2__factory extends ContractFactory {
  constructor(...args: PrizeDistributionFactoryV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _prizeTierHistory: PromiseOrValue<string>,
    _drawBuffer: PromiseOrValue<string>,
    _prizeDistributionBuffer: PromiseOrValue<string>,
    _ticket: PromiseOrValue<string>,
    _minPickCost: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PrizeDistributionFactoryV2> {
    return super.deploy(
      _owner,
      _prizeTierHistory,
      _drawBuffer,
      _prizeDistributionBuffer,
      _ticket,
      _minPickCost,
      overrides || {}
    ) as Promise<PrizeDistributionFactoryV2>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _prizeTierHistory: PromiseOrValue<string>,
    _drawBuffer: PromiseOrValue<string>,
    _prizeDistributionBuffer: PromiseOrValue<string>,
    _ticket: PromiseOrValue<string>,
    _minPickCost: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _prizeTierHistory,
      _drawBuffer,
      _prizeDistributionBuffer,
      _ticket,
      _minPickCost,
      overrides || {}
    );
  }
  override attach(address: string): PrizeDistributionFactoryV2 {
    return super.attach(address) as PrizeDistributionFactoryV2;
  }
  override connect(signer: Signer): PrizeDistributionFactoryV2__factory {
    return super.connect(signer) as PrizeDistributionFactoryV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrizeDistributionFactoryV2Interface {
    return new utils.Interface(_abi) as PrizeDistributionFactoryV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrizeDistributionFactoryV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PrizeDistributionFactoryV2;
  }
}
