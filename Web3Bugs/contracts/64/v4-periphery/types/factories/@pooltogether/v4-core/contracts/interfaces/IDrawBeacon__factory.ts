/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDrawBeacon,
  IDrawBeaconInterface,
} from "../../../../../@pooltogether/v4-core/contracts/interfaces/IDrawBeacon";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "drawPeriodSeconds",
        type: "uint32",
      },
    ],
    name: "BeaconPeriodSecondsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "startedAt",
        type: "uint64",
      },
    ],
    name: "BeaconPeriodStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IDrawBuffer",
        name: "newDrawBuffer",
        type: "address",
      },
    ],
    name: "DrawBufferUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "rngRequestId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "rngLockBlock",
        type: "uint32",
      },
    ],
    name: "DrawCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    name: "DrawCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "rngRequestId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "rngLockBlock",
        type: "uint32",
      },
    ],
    name: "DrawStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract RNGInterface",
        name: "rngService",
        type: "address",
      },
    ],
    name: "RngServiceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "rngTimeout",
        type: "uint32",
      },
    ],
    name: "RngTimeoutSet",
    type: "event",
  },
  {
    inputs: [],
    name: "beaconPeriodEndAt",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beaconPeriodRemainingSeconds",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "time",
        type: "uint64",
      },
    ],
    name: "calculateNextBeaconPeriodStartTime",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canCompleteDraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canStartDraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelDraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "completeDraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRngLockBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRngRequestId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isBeaconPeriodOver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRngCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRngRequested",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRngTimedOut",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "beaconPeriodSeconds",
        type: "uint32",
      },
    ],
    name: "setBeaconPeriodSeconds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDrawBuffer",
        name: "newDrawBuffer",
        type: "address",
      },
    ],
    name: "setDrawBuffer",
    outputs: [
      {
        internalType: "contract IDrawBuffer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract RNGInterface",
        name: "rngService",
        type: "address",
      },
    ],
    name: "setRngService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "rngTimeout",
        type: "uint32",
      },
    ],
    name: "setRngTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startDraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IDrawBeacon__factory {
  static readonly abi = _abi;
  static createInterface(): IDrawBeaconInterface {
    return new utils.Interface(_abi) as IDrawBeaconInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDrawBeacon {
    return new Contract(address, _abi, signerOrProvider) as IDrawBeacon;
  }
}
