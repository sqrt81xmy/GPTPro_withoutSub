/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  RNGInterface,
  RNGInterfaceInterface,
} from "../../../../@pooltogether/pooltogether-rng-contracts/contracts/RNGInterface";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "requestId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    name: "RandomNumberCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "requestId",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RandomNumberRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "getLastRequestId",
    outputs: [
      {
        internalType: "uint32",
        name: "requestId",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequestFee",
    outputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "requestFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "requestId",
        type: "uint32",
      },
    ],
    name: "isRequestComplete",
    outputs: [
      {
        internalType: "bool",
        name: "isCompleted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "requestId",
        type: "uint32",
      },
    ],
    name: "randomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "randomNum",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomNumber",
    outputs: [
      {
        internalType: "uint32",
        name: "requestId",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "lockBlock",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class RNGInterface__factory {
  static readonly abi = _abi;
  static createInterface(): RNGInterfaceInterface {
    return new utils.Interface(_abi) as RNGInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RNGInterface {
    return new Contract(address, _abi, signerOrProvider) as RNGInterface;
  }
}
