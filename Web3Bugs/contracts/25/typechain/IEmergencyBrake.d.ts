/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface IEmergencyBrakeInterface extends ethers.utils.Interface {
  functions: {
    "cancel(address,address[],bytes4[][])": FunctionFragment;
    "execute(address,address[],bytes4[][])": FunctionFragment;
    "plan(address,address[],bytes4[][])": FunctionFragment;
    "restore(address,address[],bytes4[][])": FunctionFragment;
    "terminate(address,address[],bytes4[][])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "cancel",
    values: [string, string[], BytesLike[][]]
  ): string;
  encodeFunctionData(
    functionFragment: "execute",
    values: [string, string[], BytesLike[][]]
  ): string;
  encodeFunctionData(
    functionFragment: "plan",
    values: [string, string[], BytesLike[][]]
  ): string;
  encodeFunctionData(
    functionFragment: "restore",
    values: [string, string[], BytesLike[][]]
  ): string;
  encodeFunctionData(
    functionFragment: "terminate",
    values: [string, string[], BytesLike[][]]
  ): string;

  decodeFunctionResult(functionFragment: "cancel", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "plan", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "restore", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "terminate", data: BytesLike): Result;

  events: {};
}

export class IEmergencyBrake extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  listeners<T, G>(
    eventFilter?: TypedEventFilter<T, G>
  ): Array<TypedListener<T, G>>;
  off<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  on<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  once<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  removeListener<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  removeAllListeners<T, G>(eventFilter: TypedEventFilter<T, G>): this;

  queryFilter<T, G>(
    event: TypedEventFilter<T, G>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<T & G>>>;

  interface: IEmergencyBrakeInterface;

  functions: {
    cancel(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "cancel(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    execute(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "execute(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    plan(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "plan(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    restore(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "restore(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    terminate(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "terminate(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  cancel(
    target: string,
    contacts: string[],
    permissions: BytesLike[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "cancel(address,address[],bytes4[][])"(
    target: string,
    contacts: string[],
    permissions: BytesLike[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  execute(
    target: string,
    contacts: string[],
    permissions: BytesLike[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "execute(address,address[],bytes4[][])"(
    target: string,
    contacts: string[],
    permissions: BytesLike[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  plan(
    target: string,
    contacts: string[],
    permissions: BytesLike[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "plan(address,address[],bytes4[][])"(
    target: string,
    contacts: string[],
    permissions: BytesLike[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  restore(
    target: string,
    contacts: string[],
    permissions: BytesLike[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "restore(address,address[],bytes4[][])"(
    target: string,
    contacts: string[],
    permissions: BytesLike[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  terminate(
    target: string,
    contacts: string[],
    permissions: BytesLike[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "terminate(address,address[],bytes4[][])"(
    target: string,
    contacts: string[],
    permissions: BytesLike[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    cancel(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: CallOverrides
    ): Promise<void>;

    "cancel(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: CallOverrides
    ): Promise<void>;

    execute(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: CallOverrides
    ): Promise<void>;

    "execute(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: CallOverrides
    ): Promise<void>;

    plan(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: CallOverrides
    ): Promise<string>;

    "plan(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: CallOverrides
    ): Promise<string>;

    restore(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: CallOverrides
    ): Promise<void>;

    "restore(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: CallOverrides
    ): Promise<void>;

    terminate(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: CallOverrides
    ): Promise<void>;

    "terminate(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    cancel(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "cancel(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    execute(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "execute(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    plan(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "plan(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    restore(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "restore(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    terminate(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "terminate(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    cancel(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "cancel(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    execute(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "execute(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    plan(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "plan(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    restore(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "restore(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    terminate(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "terminate(address,address[],bytes4[][])"(
      target: string,
      contacts: string[],
      permissions: BytesLike[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
