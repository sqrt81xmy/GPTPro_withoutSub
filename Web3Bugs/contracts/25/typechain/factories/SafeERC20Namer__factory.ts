/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SafeERC20Namer } from "../SafeERC20Namer";

export class SafeERC20Namer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SafeERC20Namer> {
    return super.deploy(overrides || {}) as Promise<SafeERC20Namer>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeERC20Namer {
    return super.attach(address) as SafeERC20Namer;
  }
  connect(signer: Signer): SafeERC20Namer__factory {
    return super.connect(signer) as SafeERC20Namer__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeERC20Namer {
    return new Contract(address, _abi, signerOrProvider) as SafeERC20Namer;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610b1f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063033b9b4f146100505780638ee573ac14610079578063e54f752214610099575b600080fd5b61006361005e3660046107b6565b6100ac565b604051610070919061090d565b60405180910390f35b61008c6100873660046107b6565b6100ff565b6040516100709190610995565b6100636100a73660046107b6565b6101fa565b606060006100da837f95d89b410000000000000000000000000000000000000000000000000000000061023d565b90508051600014156100f7576100ef836103a7565b9150506100fa565b90505b919050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f313ce5670000000000000000000000000000000000000000000000000000000017905290516000918291829173ffffffffffffffffffffffffffffffffffffffff86169161018091906108f1565b600060405180830381855afa9150503d80600081146101bb576040519150601f19603f3d011682016040523d82523d6000602084013e6101c0565b606091505b50915091508180156101d3575080516020145b6101de5760126101f2565b808060200190518101906101f291906108d0565b949350505050565b60606000610228837f06fdde030000000000000000000000000000000000000000000000000000000061023d565b90508051600014156100f7576100ef836103b4565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000085161790529051606091600091829173ffffffffffffffffffffffffffffffffffffffff8716916102c191906108f1565b600060405180830381855afa9150503d80600081146102fc576040519150601f19603f3d011682016040523d82523d6000602084013e610301565b606091505b509150915081158061031257508051155b156103305760405180602001604052806000815250925050506103a1565b8051602014156103655760008180602001905181019061035091906107f1565b905061035b816103c1565b93505050506103a1565b60408151111561038c57808060200190518101906103839190610809565b925050506103a1565b60405180602001604052806000815250925050505b92915050565b60606100f78260066105ab565b60606100f78260286105ab565b604080516020808252818301909252606091600091906020820181803683370190505090506000805b60208110156104b457600085826020811061041557634e487b7160e01b600052603260045260246000fd5b1a60f81b90507fff000000000000000000000000000000000000000000000000000000000000008116156104a1578084848151811061046457634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508261049d81610a64565b9350505b50806104ac81610a64565b9150506103ea565b5060008167ffffffffffffffff8111156104de57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610508576020820181803683370190505b50905060005b828110156105a25783818151811061053657634e487b7160e01b600052603260045260246000fd5b602001015160f81c60f81b82828151811061056157634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508061059a81610a64565b91505061050e565b50949350505050565b60606105b8600283610a9d565b1580156105c55750600082115b80156105d2575060288211155b610611576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106089061095e565b60405180910390fd5b60008267ffffffffffffffff81111561063a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610664576020820181803683370190505b50905073ffffffffffffffffffffffffffffffffffffffff841660005b8481101561077e576000610696826026610a1d565b6106a19060046109e0565b83901c90506106b660048260ff16901c610788565b8483815181106106d657634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061071181600f16610788565b8461071d8460016109a3565b8151811061073b57634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061077790506002826109a3565b9050610681565b5090949350505050565b6000600a8260ff1610156107ab576107a18260306109bb565b60f81b90506100fa565b6107a18260376109bb565b6000602082840312156107c7578081fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107ea578182fd5b9392505050565b600060208284031215610802578081fd5b5051919050565b60006020828403121561081a578081fd5b815167ffffffffffffffff80821115610831578283fd5b818401915084601f830112610844578283fd5b81518181111561085657610856610ad3565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561089c5761089c610ad3565b816040528281528760208487010111156108b4578586fd5b6108c5836020830160208801610a34565b979650505050505050565b6000602082840312156108e1578081fd5b815160ff811681146107ea578182fd5b60008251610903818460208701610a34565b9190910192915050565b600060208252825180602084015261092c816040850160208701610a34565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252601e908201527f41646472657373537472696e675574696c3a20494e56414c49445f4c454e0000604082015260600190565b60ff91909116815260200190565b600082198211156109b6576109b6610abd565b500190565b600060ff821660ff84168060ff038211156109d8576109d8610abd565b019392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a1857610a18610abd565b500290565b600082821015610a2f57610a2f610abd565b500390565b60005b83811015610a4f578181015183820152602001610a37565b83811115610a5e576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a9657610a96610abd565b5060010190565b600082610ab857634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122052a4202d4cdb9b981e969043068a69d5c306b587876286d420cbe8615f91fb5f64736f6c63430008010033";
