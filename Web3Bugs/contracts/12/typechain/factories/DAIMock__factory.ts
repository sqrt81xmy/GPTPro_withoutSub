/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DAIMock } from "../DAIMock";

export class DAIMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DAIMock> {
    return super.deploy(overrides || {}) as Promise<DAIMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DAIMock {
    return super.attach(address) as DAIMock;
  }
  connect(signer: Signer): DAIMock__factory {
    return super.connect(signer) as DAIMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAIMock {
    return new Contract(address, _abi, signerOrProvider) as DAIMock;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260036080819052623f3f3f60e81b60a090815262000024919081620001a1565b50604080518082019091526003808252623f3f3f60e81b60209092019182526200005191600491620001a1565b506005805460ff191660121790553480156200006c57600080fd5b506040518060400160405280600e81526020016d2230b49029ba30b13632b1b7b4b760911b8152506040518060400160405280600381526020016244414960e81b81525060128260039080519060200190620000ca929190620001a1565b508151620000e0906004906020850190620001a1565b506005805460ff191660ff92909216919091179055505060405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f906200012c9060039062000247565b60408051918290038220828201825260018352603160f81b60209384015290516200017f93927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6918691309101620002ec565b60408051601f1981840301815291905280516020909101206007555062000361565b828054620001af9062000324565b90600052602060002090601f016020900481019282620001d357600085556200021e565b82601f10620001ee57805160ff19168380011785556200021e565b828001600101855582156200021e579182015b828111156200021e57825182559160200191906001019062000201565b506200022c92915062000230565b5090565b5b808211156200022c576000815560010162000231565b81546000908190600281046001808316806200026457607f831692505b60208084108214156200028557634e487b7160e01b87526022600452602487fd5b8180156200029c5760018114620002ae57620002de565b60ff19861689528489019650620002de565b620002b98a62000318565b885b86811015620002d65781548b820152908501908301620002bb565b505084890196505b509498975050505050505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60009081526020902090565b6002810460018216806200033957607f821691505b602082108114156200035b57634e487b7160e01b600052602260045260246000fd5b50919050565b610dd380620003716000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780638fcbaf0c116100665780638fcbaf0c146101c857806395d89b41146101db578063a9059cbb146101e3578063dd62ed3e146101f6576100f5565b806340c10f191461018557806354fd4d501461019a57806370a08231146101a25780637ecebe00146101b5576100f5565b806323b872dd116100d357806323b872dd1461014d57806330adf81f14610160578063313ce567146101685780633644e5151461017d576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b610102610209565b60405161010f9190610b1e565b60405180910390f35b61012b610126366004610a4a565b610297565b60405161010f9190610aa9565b6101406102ab565b60405161010f9190610ab4565b61012b61015b366004610988565b6102b1565b6101406102d1565b6101706102f5565b60405161010f9190610cd9565b6101406102fe565b610198610193366004610a4a565b610304565b005b610102610313565b6101406101b036600461093c565b61034c565b6101406101c336600461093c565b610378565b6101986101d63660046109c3565b61038a565b61010261060d565b61012b6101f1366004610a4a565b61061a565b610140610204366004610956565b610627565b6003805461021690610cff565b80601f016020809104026020016040519081016040528092919081815260200182805461024290610cff565b801561028f5780601f106102645761010080835404028352916020019161028f565b820191906000526020600020905b81548152906001019060200180831161027257829003601f168201915b505050505081565b60006102a433848461065f565b9392505050565b60005490565b60006102bd84836106dc565b506102c984848461076f565b949350505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b60055460ff1681565b60075481565b61030e8282610853565b505050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160205260409020545b919050565b60066020526000908152604090205481565b60006007547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb8a8a8a8a8a6040516020016103ca96959493929190610abd565b604051602081830303815290604052805190602001206040516020016103f1929190610a73565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120905073ffffffffffffffffffffffffffffffffffffffff89166104655760405162461bcd60e51b815260040161045c90610c6b565b60405180910390fd5b600181858585604051600081526020016040526040516104889493929190610b00565b6020604051602081039080840390855afa1580156104aa573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146104fe5760405162461bcd60e51b815260040161045c90610ca2565b85158061050b5750854211155b6105275760405162461bcd60e51b815260040161045c90610b8f565b73ffffffffffffffffffffffffffffffffffffffff8916600090815260066020526040812080549161055883610d53565b91905055871461057a5760405162461bcd60e51b815260040161045c90610bfd565b60008561058857600061058c565b6000195b73ffffffffffffffffffffffffffffffffffffffff808c166000818152600260209081526040808320948f1680845294909152908190208490555192935090917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105f9908590610ab4565b60405180910390a350505050505050505050565b6004805461021690610cff565b60006102a433848461076f565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526002602090815260408083209487168084529490915280822085905551909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106ca908690610ab4565b60405180910390a35060019392505050565b600073ffffffffffffffffffffffffffffffffffffffff831633146107665773ffffffffffffffffffffffffffffffffffffffff83166000908152600260209081526040808320338452909152902054600019811461076457828110156107555760405162461bcd60e51b815260040161045c90610bc6565b610762843385840361065f565b505b505b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120548211156107b45760405162461bcd60e51b815260040161045c90610c34565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602052604080822080548690039055918516815220546107f4908390610ce7565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526001602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106ca908690610ab4565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040812054610884908390610ce7565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040812091909155546108b9908390610ce7565b600090815560405173ffffffffffffffffffffffffffffffffffffffff851691907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610907908690610ab4565b60405180910390a350600192915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461037357600080fd5b60006020828403121561094d578081fd5b6102a482610918565b60008060408385031215610968578081fd5b61097183610918565b915061097f60208401610918565b90509250929050565b60008060006060848603121561099c578081fd5b6109a584610918565b92506109b360208501610918565b9150604084013590509250925092565b600080600080600080600080610100898b0312156109df578384fd5b6109e889610918565b97506109f660208a01610918565b9650604089013595506060890135945060808901358015158114610a18578485fd5b935060a089013560ff81168114610a2d578384fd5b979a969950949793969295929450505060c08201359160e0013590565b60008060408385031215610a5c578182fd5b610a6583610918565b946020939093013593505050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b901515815260200190565b90815260200190565b95865273ffffffffffffffffffffffffffffffffffffffff948516602087015292909316604085015260608401526080830191909152151560a082015260c00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015610b4a57858101830151858201604001528201610b2e565b81811115610b5b5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526012908201527f4461692f7065726d69742d657870697265640000000000000000000000000000604082015260600190565b6020808252601c908201527f45524332303a20496e73756666696369656e7420617070726f76616c00000000604082015260600190565b60208082526011908201527f4461692f696e76616c69642d6e6f6e6365000000000000000000000000000000604082015260600190565b6020808252601b908201527f45524332303a20496e73756666696369656e742062616c616e63650000000000604082015260600190565b60208082526015908201527f4461692f696e76616c69642d616464726573732d300000000000000000000000604082015260600190565b60208082526012908201527f4461692f696e76616c69642d7065726d69740000000000000000000000000000604082015260600190565b60ff91909116815260200190565b60008219821115610cfa57610cfa610d6e565b500190565b600281046001821680610d1357607f821691505b60208210811415610d4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000600019821415610d6757610d67610d6e565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212203a61c92ad46dc37a60f61081d852d49f5e9bf3cc579ca1a8d987db94bfb24e5964736f6c63430008010033";
