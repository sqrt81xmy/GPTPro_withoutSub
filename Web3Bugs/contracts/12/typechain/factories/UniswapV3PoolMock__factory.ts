/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { UniswapV3PoolMock } from "../UniswapV3PoolMock";

export class UniswapV3PoolMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    factory_: string,
    token0_: string,
    token1_: string,
    fee_: BigNumberish,
    overrides?: Overrides
  ): Promise<UniswapV3PoolMock> {
    return super.deploy(
      factory_,
      token0_,
      token1_,
      fee_,
      overrides || {}
    ) as Promise<UniswapV3PoolMock>;
  }
  getDeployTransaction(
    factory_: string,
    token0_: string,
    token1_: string,
    fee_: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      factory_,
      token0_,
      token1_,
      fee_,
      overrides || {}
    );
  }
  attach(address: string): UniswapV3PoolMock {
    return super.attach(address) as UniswapV3PoolMock;
  }
  connect(signer: Signer): UniswapV3PoolMock__factory {
    return super.connect(signer) as UniswapV3PoolMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PoolMock {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3PoolMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "factory_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee_",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLiquidityPerTick",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tickSpacing",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b5060405161039d38038061039d83398101604081905261003091610085565b60e81b6001600160e81b03191660e052606090811b6001600160601b031990811660c05291811b821660a0529190911b166080526100e1565b80516001600160a01b038116811461008057600080fd5b919050565b6000806000806080858703121561009a578384fd5b6100a385610069565b93506100b160208601610069565b92506100bf60408601610069565b9150606085015162ffffff811681146100d6578182fd5b939692955090935050565b60805160601c60a05160601c60c05160601c60e05160e81c61027761012660003960006101a20152600061017e015260006101260152600061015a01526102776000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c45a01551161005b578063c45a0155146100ea578063d0c93a7c146100f2578063d21220a714610107578063ddca3f431461010f57610088565b80630dfe16811461008d57806360fe47b1146100ab57806370cf754a146100c0578063a035b1fe146100d5575b600080fd5b610095610124565b6040516100a291906101dc565b60405180910390f35b6100be6100b93660046101c4565b610148565b005b6100c861014d565b6040516100a2919061020b565b6100dd610152565b6040516100a29190610238565b610095610158565b6100fa61014d565b6040516100a291906101fd565b61009561017c565b6101176101a0565b6040516100a29190610228565b7f000000000000000000000000000000000000000000000000000000000000000081565b600055565b600090565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000602082840312156101d5578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60029190910b815260200190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b62ffffff91909116815260200190565b9081526020019056fea2646970667358221220d0318d83a4e7cbb3aaee05cf8035dc321593ff6b2a51a27f05104b53fd8ce34564736f6c63430008010033";
