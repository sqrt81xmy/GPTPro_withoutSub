/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { UniswapV2PairMock } from "../UniswapV2PairMock";

export class UniswapV2PairMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<UniswapV2PairMock> {
    return super.deploy(overrides || {}) as Promise<UniswapV2PairMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UniswapV2PairMock {
    return super.attach(address) as UniswapV2PairMock;
  }
  connect(signer: Signer): UniswapV2PairMock__factory {
    return super.connect(signer) as UniswapV2PairMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2PairMock {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2PairMock;
  }
}

const _abi = [
  {
    inputs: [],
    name: "blockTimestamp",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserves0",
    outputs: [
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserves1",
    outputs: [
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cumPrice0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumPrice1",
        type: "uint256",
      },
    ],
    name: "setCumulativePrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint112",
        name: "reserves0_",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserves1_",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "blockTimestamp_",
        type: "uint32",
      },
    ],
    name: "setReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103ed806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635a3d54931161005b5780635a3d5493146100ec578063adb61832146100f4578063b9b4c46314610109578063c67a02f31461011157610088565b80630902f1ac1461008d57806318243296146100ad5780632c6a592f146100c25780635909c0d5146100d7575b600080fd5b610095610124565b6040516100a49392919061036d565b60405180910390f35b6100c06100bb3660046102e3565b610179565b005b6100ca61023f565b6040516100a49190610352565b6100df610255565b6040516100a4919061039d565b6100df61025b565b6100fc610261565b6040516100a491906103a6565b6100ca61028d565b6100c061011f366004610331565b6102b5565b6000546dffffffffffffffffffffffffffff808216926e0100000000000000000000000000008304909116917c0100000000000000000000000000000000000000000000000000000000900463ffffffff1690565b6000805463ffffffff9092167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff9485166e010000000000000000000000000000027fffffffff0000000000000000000000000000ffffffffffffffffffffffffffff959096167fffffffffffffffffffffffffffffffffffff000000000000000000000000000090941693909317939093169390931716179055565b6000546dffffffffffffffffffffffffffff1681565b60015481565b60025481565b6000547c0100000000000000000000000000000000000000000000000000000000900463ffffffff1681565b6000546e01000000000000000000000000000090046dffffffffffffffffffffffffffff1681565b600191909155600255565b80356dffffffffffffffffffffffffffff811681146102de57600080fd5b919050565b6000806000606084860312156102f7578283fd5b610300846102c0565b925061030e602085016102c0565b9150604084013563ffffffff81168114610326578182fd5b809150509250925092565b60008060408385031215610343578182fd5b50508035926020909101359150565b6dffffffffffffffffffffffffffff91909116815260200190565b6dffffffffffffffffffffffffffff938416815291909216602082015263ffffffff909116604082015260600190565b90815260200190565b63ffffffff9190911681526020019056fea2646970667358221220b25e81cbfd632d9f419a97dd60f37cdd0777f3a611dd6af70cd73f8abc41744864736f6c63430008010033";
