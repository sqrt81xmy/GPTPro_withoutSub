/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockCurveGauge,
  MockCurveGaugeInterface,
} from "../MockCurveGauge";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_lptoken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_rewardTokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reward_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_distributor",
        type: "address",
      },
    ],
    name: "add_reward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim_rewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimable_reward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deposit_reward_token",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lp_token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reward_tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012a3380380620012a383398101604081905262000034916200029a565b8351849084906200004d906003906020850190620000a1565b50805162000063906004906020840190620000a1565b5050600580546001600160a01b0319166001600160a01b0385161790555080516200009690600690602084019062000130565b5050505050620003ee565b828054620000af90620003b1565b90600052602060002090601f016020900481019282620000d357600085556200011e565b82601f10620000ee57805160ff19168380011785556200011e565b828001600101855582156200011e579182015b828111156200011e57825182559160200191906001019062000101565b506200012c92915062000188565b5090565b8280548282559060005260206000209081019282156200011e579160200282015b828111156200011e57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000151565b5b808211156200012c576000815560010162000189565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620001e057620001e06200019f565b604052919050565b600082601f830112620001fa57600080fd5b81516001600160401b038111156200021657620002166200019f565b60206200022c601f8301601f19168201620001b5565b82815285828487010111156200024157600080fd5b60005b838110156200026157858101830151828201840152820162000244565b83811115620002735760008385840101525b5095945050505050565b80516001600160a01b03811681146200029557600080fd5b919050565b60008060008060808587031215620002b157600080fd5b84516001600160401b0380821115620002c957600080fd5b620002d788838901620001e8565b9550602091508187015181811115620002ef57600080fd5b620002fd89828a01620001e8565b9550506200030e604088016200027d565b93506060870151818111156200032357600080fd5b8701601f810189136200033557600080fd5b8051828111156200034a576200034a6200019f565b8060051b92506200035d848401620001b5565b818152928201840192848101908b8511156200037857600080fd5b928501925b84841015620003a15762000391846200027d565b825292850192908501906200037d565b989b979a50959850505050505050565b600181811c90821680620003c657607f821691505b60208210811415620003e857634e487b7160e01b600052602260045260246000fd5b50919050565b610ea580620003fe6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806370a08231116100cd578063a9059cbb11610081578063dd62ed3e11610066578063dd62ed3e146102c3578063e6f1daf2146102fc578063e8de0d4d1461030457600080fd5b8063a9059cbb1461029d578063b6b55f25146102b057600080fd5b806393f7aa67116100b257806393f7aa671461027057806395d89b4114610282578063a457c2d71461028a57600080fd5b806370a082311461023457806382c630661461025d57600080fd5b80632e1a7d4d1161012457806333fd6f741161010957806333fd6f74146101e057806339509351146101f657806354c49fe91461020957600080fd5b80632e1a7d4d146101bc578063313ce567146101d157600080fd5b806306fdde0314610156578063095ea7b31461017457806318160ddd1461019757806323b872dd146101a9575b600080fd5b61015e610312565b60405161016b9190610c80565b60405180910390f35b610187610182366004610cf1565b6103a4565b604051901515815260200161016b565b6002545b60405190815260200161016b565b6101876101b7366004610d1b565b6103ba565b6101cf6101ca366004610d57565b61047e565b005b6040516012815260200161016b565b61019b6101ee366004610d70565b600092915050565b610187610204366004610cf1565b6104fe565b61021c610217366004610d57565b61053a565b6040516001600160a01b03909116815260200161016b565b61019b610242366004610da3565b6001600160a01b031660009081526020819052604090205490565b60055461021c906001600160a01b031681565b6101cf61027e366004610cf1565b5050565b61015e610564565b610187610298366004610cf1565b610573565b6101876102ab366004610cf1565b610624565b6101cf6102be366004610d57565b610631565b61019b6102d1366004610d70565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101cf610678565b6101cf61027e366004610d70565b60606003805461032190610dc5565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90610dc5565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b60006103b1338484610738565b50600192915050565b60006103c784848461085d565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104665760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104738533858403610738565b506001949350505050565b6104883382610a5b565b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044015b6020604051808303816000875af11580156104da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e9190610e00565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103b1918590610535908690610e38565b610738565b6006818154811061054a57600080fd5b6000918252602090912001546001600160a01b0316905081565b60606004805461032190610dc5565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561060d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161045d565b61061a3385858403610738565b5060019392505050565b60006103b133848461085d565b61063b3382610ba1565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016104bb565b33600090815260208190526040812054905b60065481101561027e57600681815481106106a7576106a7610e50565b60009182526020909120015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107259190610e00565b508061073081610e66565b91505061068a565b6001600160a01b03831661079a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161045d565b6001600160a01b0382166107fb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161045d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161045d565b6001600160a01b03821661093b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161045d565b6001600160a01b038316600090815260208190526040902054818110156109ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161045d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a01908490610e38565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a4d91815260200190565b60405180910390a350505050565b6001600160a01b038216610abb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161045d565b6001600160a01b03821660009081526020819052604090205481811015610b2f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161045d565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b5e908490610e81565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610850565b6001600160a01b038216610bf75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161045d565b8060026000828254610c099190610e38565b90915550506001600160a01b03821660009081526020819052604081208054839290610c36908490610e38565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610cad57858101830151858201604001528201610c91565b81811115610cbf576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610cec57600080fd5b919050565b60008060408385031215610d0457600080fd5b610d0d83610cd5565b946020939093013593505050565b600080600060608486031215610d3057600080fd5b610d3984610cd5565b9250610d4760208501610cd5565b9150604084013590509250925092565b600060208284031215610d6957600080fd5b5035919050565b60008060408385031215610d8357600080fd5b610d8c83610cd5565b9150610d9a60208401610cd5565b90509250929050565b600060208284031215610db557600080fd5b610dbe82610cd5565b9392505050565b600181811c90821680610dd957607f821691505b60208210811415610dfa57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610e1257600080fd5b81518015158114610dbe57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610e4b57610e4b610e22565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e7a57610e7a610e22565b5060010190565b600082821015610e9357610e93610e22565b50039056fea164736f6c634300080b000a";

type MockCurveGaugeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCurveGaugeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCurveGauge__factory extends ContractFactory {
  constructor(...args: MockCurveGaugeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _lptoken: string,
    _rewardTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockCurveGauge> {
    return super.deploy(
      _name,
      _symbol,
      _lptoken,
      _rewardTokens,
      overrides || {}
    ) as Promise<MockCurveGauge>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _lptoken: string,
    _rewardTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _lptoken,
      _rewardTokens,
      overrides || {}
    );
  }
  attach(address: string): MockCurveGauge {
    return super.attach(address) as MockCurveGauge;
  }
  connect(signer: Signer): MockCurveGauge__factory {
    return super.connect(signer) as MockCurveGauge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCurveGaugeInterface {
    return new utils.Interface(_abi) as MockCurveGaugeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCurveGauge {
    return new Contract(address, _abi, signerOrProvider) as MockCurveGauge;
  }
}
