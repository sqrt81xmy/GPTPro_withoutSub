/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBalancerPoolToken,
  MockBalancerPoolTokenInterface,
} from "../MockBalancerPoolToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_initialRecipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initialMint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum MockBalancerPoolToken.Variable",
            name: "variable",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "secs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ago",
            type: "uint256",
          },
        ],
        internalType: "struct MockBalancerPoolToken.OracleAverageQuery[]",
        name: "",
        type: "tuple[]",
      },
    ],
    name: "getTimeWeightedAverage",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010fd380380620010fd83398101604081905262000034916200025e565b604080518082018252600780825266135bd8dad0941560ca1b6020808401828152855180870190965292855284015281519192916200007691600391620001b8565b5080516200008c906004906020840190620001b8565b50506005805460ff191660ff8616908117909155620000c791508390620000b590600a620003cb565b620000c19084620003e0565b620000d0565b5050506200045a565b6001600160a01b0382166200012b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200013f919062000402565b90915550506001600160a01b038216600090815260208190526040812080548392906200016e90849062000402565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001c6906200041d565b90600052602060002090601f016020900481019282620001ea576000855562000235565b82601f106200020557805160ff191683800117855562000235565b8280016001018555821562000235579182015b828111156200023557825182559160200191906001019062000218565b506200024392915062000247565b5090565b5b8082111562000243576000815560010162000248565b6000806000606084860312156200027457600080fd5b835160ff811681146200028657600080fd5b60208501519093506001600160a01b0381168114620002a457600080fd5b80925050604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200030d578160001904821115620002f157620002f1620002b6565b80851615620002ff57918102915b93841c9390800290620002d1565b509250929050565b6000826200032657506001620003c5565b816200033557506000620003c5565b81600181146200034e5760028114620003595762000379565b6001915050620003c5565b60ff8411156200036d576200036d620002b6565b50506001821b620003c5565b5060208310610133831016604e8410600b84101617156200039e575081810a620003c5565b620003aa8383620002cc565b8060001904821115620003c157620003c1620002b6565b0290505b92915050565b6000620003d9838362000315565b9392505050565b6000816000190483118215151615620003fd57620003fd620002b6565b500290565b60008219821115620004185762000418620002b6565b500190565b600181811c908216806200043257607f821691505b602082108114156200045457634e487b7160e01b600052602260045260246000fd5b50919050565b610c93806200046a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f1911610097578063a035b1fe11610066578063a035b1fe146101fb578063a457c2d714610204578063a9059cbb14610217578063dd62ed3e1461022a57600080fd5b806340c10f19146101a257806370a08231146101b757806391b7f5ed146101e057806395d89b41146101f357600080fd5b80631dccd830116100d35780631dccd8301461014d57806323b872dd1461016d578063313ce56714610180578063395093511461018f57600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610263565b60405161010f9190610934565b60405180910390f35b61012b6101263660046109a5565b6102f5565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61016061015b366004610a3f565b61030b565b60405161010f9190610b21565b61012b61017b366004610b65565b610358565b6040516012815260200161010f565b61012b61019d3660046109a5565b61041c565b6101b56101b03660046109a5565b610458565b005b61013f6101c5366004610ba1565b6001600160a01b031660009081526020819052604090205490565b6101b56101ee366004610bc3565b600655565b610102610466565b61013f60065481565b61012b6102123660046109a5565b610475565b61012b6102253660046109a5565b610526565b61013f610238366004610bdc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461027290610c0f565b80601f016020809104026020016040519081016040528092919081815260200182805461029e90610c0f565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b5050505050905090565b6000610302338484610533565b50600192915050565b60408051600180825281830190925260609160009190602080830190803683370190505090506006548160008151811061034757610347610c4a565b602090810291909101015292915050565b6000610365848484610657565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104045760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104118533858403610533565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610302918590610453908690610c60565b610533565b6104628282610855565b5050565b60606004805461027290610c0f565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561050f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103fb565b61051c3385858403610533565b5060019392505050565b6000610302338484610657565b6001600160a01b0383166105955760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fb565b6001600160a01b0382166105f65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106d35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103fb565b6001600160a01b0382166107355760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fb565b6001600160a01b038316600090815260208190526040902054818110156107c45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103fb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107fb908490610c60565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161084791815260200190565b60405180910390a350505050565b6001600160a01b0382166108ab5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fb565b80600260008282546108bd9190610c60565b90915550506001600160a01b038216600090815260208190526040812080548392906108ea908490610c60565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561096157858101830151858201604001528201610945565b81811115610973576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109a057600080fd5b919050565b600080604083850312156109b857600080fd5b6109c183610989565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610a0857610a086109cf565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a3757610a376109cf565b604052919050565b60006020808385031215610a5257600080fd5b823567ffffffffffffffff80821115610a6a57600080fd5b818501915085601f830112610a7e57600080fd5b813581811115610a9057610a906109cf565b610a9e848260051b01610a0e565b81815284810192506060918202840185019188831115610abd57600080fd5b938501935b82851015610b155780858a031215610ada5760008081fd5b610ae26109e5565b853560038110610af25760008081fd5b815285870135878201526040808701359082015284529384019392850192610ac2565b50979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610b5957835183529284019291840191600101610b3d565b50909695505050505050565b600080600060608486031215610b7a57600080fd5b610b8384610989565b9250610b9160208501610989565b9150604084013590509250925092565b600060208284031215610bb357600080fd5b610bbc82610989565b9392505050565b600060208284031215610bd557600080fd5b5035919050565b60008060408385031215610bef57600080fd5b610bf883610989565b9150610c0660208401610989565b90509250929050565b600181811c90821680610c2357607f821691505b60208210811415610c4457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60008219821115610c8157634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080b000a";

type MockBalancerPoolTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBalancerPoolTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBalancerPoolToken__factory extends ContractFactory {
  constructor(...args: MockBalancerPoolTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _decimals: BigNumberish,
    _initialRecipient: string,
    _initialMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBalancerPoolToken> {
    return super.deploy(
      _decimals,
      _initialRecipient,
      _initialMint,
      overrides || {}
    ) as Promise<MockBalancerPoolToken>;
  }
  getDeployTransaction(
    _decimals: BigNumberish,
    _initialRecipient: string,
    _initialMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _decimals,
      _initialRecipient,
      _initialMint,
      overrides || {}
    );
  }
  attach(address: string): MockBalancerPoolToken {
    return super.attach(address) as MockBalancerPoolToken;
  }
  connect(signer: Signer): MockBalancerPoolToken__factory {
    return super.connect(signer) as MockBalancerPoolToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBalancerPoolTokenInterface {
    return new utils.Interface(_abi) as MockBalancerPoolTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBalancerPoolToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockBalancerPoolToken;
  }
}
