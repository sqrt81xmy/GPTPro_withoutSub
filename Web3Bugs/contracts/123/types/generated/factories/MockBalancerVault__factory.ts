/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBalancerVault,
  MockBalancerVaultInterface,
} from "../MockBalancerVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum IVault.PoolSpecialization",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "maxAmountsIn",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.JoinPoolRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "joinPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "setTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IAsset",
            name: "assetIn",
            type: "address",
          },
          {
            internalType: "contract IAsset",
            name: "assetOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IVault.SingleSwap",
        name: "singleSwap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.FundManagement",
        name: "funds",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountCalculated",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c7c380380610c7c83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610be9806100936000396000f3fe60806040526004361061007b5760003560e01c8063b95cac281161004e578063b95cac281461012b578063cbc7854e14610140578063cbdf382c146101a1578063f6c00927146101c157600080fd5b80630fc63d101461008057806316f0115b146100bd57806352bbbe29146100dd5780635f64b55b1461010b575b600080fd5b34801561008c57600080fd5b506002546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100c957600080fd5b506000546100a0906001600160a01b031681565b3480156100e957600080fd5b506100fd6100f83660046107f0565b6101fd565b6040519081526020016100b4565b34801561011757600080fd5b506003546100a0906001600160a01b031681565b61013e61013936600461095c565b6104d7565b005b34801561014c57600080fd5b5061013e61015b366004610aad565b600280546001600160a01b039384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560038054929093169116179055565b3480156101ad57600080fd5b506001546100a0906001600160a01b031681565b3480156101cd57600080fd5b506101ef6101dc366004610ae6565b506001546001600160a01b031690600090565b6040516100b4929190610aff565b60025460608501516000916001600160a01b0391821691161480610233575060035460608601516001600160a01b039081169116145b6102835760405162461bcd60e51b815260206004820152600660248201527f21746f6b656e0000000000000000000000000000000000000000000000000000604482015260640160405180910390fd5b60025460608601516001600160a01b03908116911614156103ab57600354845160808701516040516323b872dd60e01b81526001600160a01b03928316600482015230602482015260448101919091529116906323b872dd906064016020604051808303816000875af11580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103229190610b3a565b506002546040858101516080880151915163a9059cbb60e01b81526001600160a01b03918216600482015260248101929092529091169063a9059cbb906044016020604051808303816000875af1158015610381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a59190610b3a565b506104cf565b60035460608601516001600160a01b03908116911614156104cf57600254845160808701516040516323b872dd60e01b81526001600160a01b03928316600482015230602482015260448101919091529116906323b872dd906064016020604051808303816000875af1158015610426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044a9190610b3a565b506003546040858101516080880151915163a9059cbb60e01b81526001600160a01b03918216600482015260248101929092529091169063a9059cbb906044016020604051808303816000875af11580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610b3a565b505b949350505050565b600081602001516000815181106104f0576104f0610b5e565b602002602001015190506000600160009054906101000a90046001600160a01b03166001600160a01b031663a035b1fe6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561054f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105739190610b74565b6001549091506001600160a01b03166340c10f19858361059b86670de0b6b3a7640000610b8d565b6105a59190610bba565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b50505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561065c5761065c610623565b60405290565b6040516080810167ffffffffffffffff8111828210171561065c5761065c610623565b604051601f8201601f1916810167ffffffffffffffff811182821017156106ae576106ae610623565b604052919050565b6001600160a01b03811681146106cb57600080fd5b50565b80356106d9816106b6565b919050565b600082601f8301126106ef57600080fd5b813567ffffffffffffffff81111561070957610709610623565b61071c601f8201601f1916602001610685565b81815284602083860101111561073157600080fd5b816020850160208301376000918101602001919091529392505050565b80151581146106cb57600080fd5b80356106d98161074e565b60006080828403121561077957600080fd5b6040516080810181811067ffffffffffffffff8211171561079c5761079c610623565b60405290508082356107ad816106b6565b815260208301356107bd8161074e565b602082015260408301356107d0816106b6565b604082015260608301356107e38161074e565b6060919091015292915050565b60008060008060e0858703121561080657600080fd5b843567ffffffffffffffff8082111561081e57600080fd5b9086019060c0828903121561083257600080fd5b61083a610639565b8235815260208301356002811061085057600080fd5b6020820152610861604084016106ce565b6040820152610872606084016106ce565b60608201526080830135608082015260a08301358281111561089357600080fd5b61089f8a8286016106de565b60a0830152508096505050506108b88660208701610767565b939693955050505060a08201359160c0013590565b600067ffffffffffffffff8211156108e7576108e7610623565b5060051b60200190565b600082601f83011261090257600080fd5b81356020610917610912836108cd565b610685565b82815260059290921b8401810191818101908684111561093657600080fd5b8286015b84811015610951578035835291830191830161093a565b509695505050505050565b6000806000806080858703121561097257600080fd5b84359350602080860135610985816106b6565b93506040860135610995816106b6565b9250606086013567ffffffffffffffff808211156109b257600080fd5b908701906080828a0312156109c657600080fd5b6109ce610662565b8235828111156109dd57600080fd5b8301601f81018b136109ee57600080fd5b80356109fc610912826108cd565b81815260059190911b8201860190868101908d831115610a1b57600080fd5b928701925b82841015610a42578335610a33816106b6565b82529287019290870190610a20565b84525050508284013582811115610a5857600080fd5b610a648b8286016108f1565b85830152506040830135935081841115610a7d57600080fd5b610a898a8585016106de565b6040820152610a9a6060840161075c565b6060820152969995985093965050505050565b60008060408385031215610ac057600080fd5b8235610acb816106b6565b91506020830135610adb816106b6565b809150509250929050565b600060208284031215610af857600080fd5b5035919050565b6001600160a01b03831681526040810160038310610b2d57634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600060208284031215610b4c57600080fd5b8151610b578161074e565b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b8657600080fd5b5051919050565b6000816000190483118215151615610bb557634e487b7160e01b600052601160045260246000fd5b500290565b600082610bd757634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c634300080b000a";

type MockBalancerVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBalancerVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBalancerVault__factory extends ContractFactory {
  constructor(...args: MockBalancerVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _poolToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBalancerVault> {
    return super.deploy(
      _poolToken,
      overrides || {}
    ) as Promise<MockBalancerVault>;
  }
  getDeployTransaction(
    _poolToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_poolToken, overrides || {});
  }
  attach(address: string): MockBalancerVault {
    return super.attach(address) as MockBalancerVault;
  }
  connect(signer: Signer): MockBalancerVault__factory {
    return super.connect(signer) as MockBalancerVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBalancerVaultInterface {
    return new utils.Interface(_abi) as MockBalancerVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBalancerVault {
    return new Contract(address, _abi, signerOrProvider) as MockBalancerVault;
  }
}
